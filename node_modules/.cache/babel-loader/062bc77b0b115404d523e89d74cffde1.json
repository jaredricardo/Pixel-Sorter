{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jaredricardo/Desktop/apps/Pixel-Sorter/src/components/CanvasApp.js\";\nimport React, { Component } from 'react';\nimport testImage from \"./test-images/300x200.jpg\";\nimport { test, nativeSort_COL2x, nativeSort_COL, bubbleSort, nativeSort } from \"./functions\";\nimport Spinner from 'react-bootstrap/Spinner';\nimport { Row, Col, Container, Dropdown, DropdownButton } from \"react-bootstrap\";\nimport { identifier } from '@babel/types';\nexport class CanvasApp extends Component {\n  constructor(props) {\n    super(props);\n\n    this.drawNewImage = () => {\n      if (!this.state.imageSelected) return alert(\"please load an image\");\n      this.setState({\n        imageLoading: true\n      }, this.resetLoading);\n    };\n\n    this.sortThePixels = () => {\n      const algo = this.state.currentSort;\n      const canvas = this.canvasRef.current;\n      const ctx = canvas.getContext(\"2d\");\n      let copyData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n\n      if (algo === 'test') {\n        copyData = test(copyData.data, this.state.imageHeight, this.state.imageWidth);\n      }\n\n      if (algo === 'nativeSort_COL_2x') {\n        copyData = nativeSort_COL2x(copyData.data, this.state.imageHeight, this.state.imageWidth);\n      }\n\n      if (algo === 'nativeSort_COL') {\n        copyData = nativeSort_COL(copyData.data, this.state.imageHeight, this.state.imageWidth);\n      }\n\n      if (algo === 'bubbleSort') {\n        copyData = bubbleSort(copyData.data, this.state.imageHeight, this.state.imageWidth);\n      }\n\n      if (algo === 'nativeSort') {\n        copyData = nativeSort(copyData.data, this.state.imageHeight, this.state.imageWidth);\n      }\n\n      ctx.putImageData(copyData, 0, 0);\n    };\n\n    this.resetLoading = async () => {\n      await this.sortThePixels();\n    };\n\n    this.checkLoading = () => {\n      if (this.state.imageLoading) {\n        return /*#__PURE__*/_jsxDEV(Spinner, {\n          animation: \"grow\",\n          size: \"sm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 20\n        }, this);\n      } else {\n        return;\n      }\n    };\n\n    this.setSortOption = e => {\n      this.setState({\n        currentSort: e.target.value\n      });\n    };\n\n    this.imageLoadHandler = e => {\n      const [file] = e.target.file;\n      console.log(file);\n      const canvas = this.canvasRef.current;\n      const ctx = canvas.getContext(\"2d\");\n      const reader = new FileReader();\n      const img = new Image();\n\n      reader.onload = function (event) {\n        img.onload = function () {\n          canvas.width = img.naturalWidth;\n          canvas.height = img.naturalHeight;\n          ctx.drawImage(img, 0, 0);\n        };\n\n        img.src = event.target.result;\n      };\n\n      reader.readAsDataURL(e.target.files[0]);\n      this.setState({\n        imageSelected: true,\n        imageLoading: false,\n        imageHeight: 1500,\n        // needs to be set dynamically\n        imageWidth: 1000 // needs to be set dybnamically \n\n      });\n    };\n\n    this.resetImage = () => {};\n\n    this.imageRef = /*#__PURE__*/React.createRef();\n    this.canvasRef = /*#__PURE__*/React.createRef();\n    this.state = {\n      currentImageSrc: null,\n      imageSelected: false,\n      imageLoading: false,\n      imageHeight: null,\n      imageWidth: null,\n      currentSort: 'test'\n    };\n  } // componentDidMount() {\n  // }\n\n\n  render() {\n    // const hiddenStyle = {\n    //     display: \"none\"\n    // }\n    const maxStyle = {\n      maxHeight: \"700px\",\n      widht: \"auto\"\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: this.imageLoadHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"options\",\n        id: \"sort-options\",\n        onChange: this.setSortOption,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"test\",\n          children: \"Test\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"nativeSort_COL_2x\",\n          children: \"Columned Native Sort x 2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"nativeSort_COL\",\n          children: \"Columned Native Sort\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"bubbleSort\",\n          children: \"Bubble Sort\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"nativeSort\",\n          children: \"Native Sort\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.drawNewImage,\n        children: \"Sort image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.resetImage,\n        children: \"Reset image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: this.canvasRef,\n          style: maxStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nexport default CanvasApp;","map":{"version":3,"sources":["/Users/jaredricardo/Desktop/apps/Pixel-Sorter/src/components/CanvasApp.js"],"names":["React","Component","testImage","test","nativeSort_COL2x","nativeSort_COL","bubbleSort","nativeSort","Spinner","Row","Col","Container","Dropdown","DropdownButton","identifier","CanvasApp","constructor","props","drawNewImage","state","imageSelected","alert","setState","imageLoading","resetLoading","sortThePixels","algo","currentSort","canvas","canvasRef","current","ctx","getContext","copyData","getImageData","width","height","data","imageHeight","imageWidth","putImageData","checkLoading","setSortOption","e","target","value","imageLoadHandler","file","console","log","reader","FileReader","img","Image","onload","event","naturalWidth","naturalHeight","drawImage","src","result","readAsDataURL","files","resetImage","imageRef","createRef","currentImageSrc","render","maxStyle","maxHeight","widht"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport testImage from \"./test-images/300x200.jpg\"\nimport { test, nativeSort_COL2x, nativeSort_COL, bubbleSort, nativeSort } from \"./functions\"\nimport Spinner from 'react-bootstrap/Spinner';\nimport { Row, Col, Container, Dropdown, DropdownButton } from \"react-bootstrap\"\nimport { identifier } from '@babel/types'\n\n\nexport class CanvasApp extends Component {\n    constructor(props) {\n        super(props)\n        this.imageRef = React.createRef()\n        this.canvasRef = React.createRef()\n        this.state = {\n            currentImageSrc: null,\n            imageSelected: false,\n            imageLoading: false, \n            imageHeight: null,\n            imageWidth: null,\n            currentSort: 'test'\n        }\n    }\n\n  \n    // componentDidMount() {\n   \n    // }\n\n\n\n      \n    drawNewImage = () => {\n        if(!this.state.imageSelected) return alert(\"please load an image\")\n\n        this.setState({\n            imageLoading: true\n        }, this.resetLoading)\n    }\n\n    sortThePixels = () => {\n        const algo = this.state.currentSort\n        const canvas = this.canvasRef.current\n        const ctx = canvas.getContext(\"2d\")\n        let copyData = ctx.getImageData(0,0, canvas.width, canvas.height)\n\n\n        if(algo === 'test') {\n            copyData = test(copyData.data, this.state.imageHeight, this.state.imageWidth)\n        } \n        if(algo === 'nativeSort_COL_2x') {\n            copyData = nativeSort_COL2x(copyData.data, this.state.imageHeight, this.state.imageWidth)\n        } \n        if(algo === 'nativeSort_COL') {\n            copyData = nativeSort_COL(copyData.data, this.state.imageHeight, this.state.imageWidth)\n        } \n        if(algo === 'bubbleSort') {\n            copyData = bubbleSort(copyData.data, this.state.imageHeight, this.state.imageWidth)\n        } \n        if(algo === 'nativeSort') {\n            copyData = nativeSort(copyData.data, this.state.imageHeight, this.state.imageWidth)\n        } \n        ctx.putImageData(copyData,0 ,0)\n    }\n\n    resetLoading = async () => {\n        await this.sortThePixels()\n    }\n\n    checkLoading = () => {\n        if(this.state.imageLoading) {\n            return <Spinner animation=\"grow\" size=\"sm\" />\n        } else {\n            return\n        }\n    }\n\n\n    setSortOption = (e) => {\n        this.setState({\n            currentSort: e.target.value\n        })\n    }\n\n    imageLoadHandler = (e) => {\n        const [ file ] = e.target.file\n        console.log(file)\n        const canvas = this.canvasRef.current\n        const ctx = canvas.getContext(\"2d\")\n        const reader = new FileReader();\n        const img = new Image();\n        reader.onload = function(event){\n        img.onload = function(){\n            canvas.width = img.naturalWidth;\n            canvas.height = img.naturalHeight;\n            ctx.drawImage(img,0,0);\n            }\n        img.src = event.target.result;\n        }\n    \n        reader.readAsDataURL(e.target.files[0]); \n\n        this.setState({\n            imageSelected: true,\n            imageLoading: false,\n            imageHeight: 1500,      // needs to be set dynamically\n            imageWidth: 1000,    // needs to be set dybnamically \n        })\n    }\n\n    resetImage = () => {\n\n    }\n\n\n    render() {\n\n        // const hiddenStyle = {\n        //     display: \"none\"\n        // }\n        \n        const maxStyle = {\n            maxHeight: \"700px\",\n            widht: \"auto\" \n        }\n\n        return (\n\n            <div> \n                \n                <input type=\"file\" onChange={this.imageLoadHandler}>\n                    \n                </input>\n\n                <select name=\"options\" id=\"sort-options\" onChange={this.setSortOption}>\n                    <option value=\"test\">Test</option>\n                    <option value=\"nativeSort_COL_2x\">Columned Native Sort x 2</option>\n                    <option value=\"nativeSort_COL\">Columned Native Sort</option>\n                    <option value=\"bubbleSort\">Bubble Sort</option>\n                    <option value=\"nativeSort\">Native Sort</option>\n                </select>\n\n                <button onClick={this.drawNewImage}>\n                    Sort image\n                    {/* {this.checkLoading()} */}\n                </button>\n\n                <button onClick={this.resetImage}>\n                    Reset image\n                </button>\n\n                \n                <div className=\"container\" >\n\n                    {/* <img ref={this.imageRef} src={testImage} />  */}\n\n                        <canvas ref={this.canvasRef} style={maxStyle}/>  \n\n                </div>\n                \n           \n            </div>\n        )\n    }\n}\n\n\nexport default CanvasApp\n"]},"metadata":{},"sourceType":"module"}