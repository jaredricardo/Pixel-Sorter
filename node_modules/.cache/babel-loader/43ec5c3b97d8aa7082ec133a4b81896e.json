{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jaredricardo/Desktop/apps/Pixel-Sorter/src/components/CanvasApp.js\";\nimport React, { Component } from 'react';\nimport testImage from \"./test-images/200.jpg\";\nimport DragDropPreview from './DragDropPreview';\nimport { sortByRed, sortByGreen, sortByBlue, test } from \"./functions\";\nexport class CanvasApp extends Component {\n  constructor(props) {\n    super(props);\n\n    this.drawNewImage = () => {\n      const canvas = this.canvasRef.current;\n      const ctx = canvas.getContext(\"2d\");\n      let copyData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n      ctx.putImageData(copyData, 0, 0);\n\n      if (this.state.currentSort === 'sortByRed') {\n        copyData = sortByRed(copyData.data, this.state.imageHeight, this.state.imageWidth);\n      }\n\n      if (this.state.currentSort === 'sortByGreen') {\n        copyData = sortByGreen(copyData.data, this.state.imageHeight, this.state.imageWidth);\n      }\n\n      if (this.state.currentSort === 'sortByBlue') {\n        copyData = sortByBlue(copyData.data, this.state.imageHeight, this.state.imageWidth);\n      }\n\n      if (this.state.currentSort === 'test') {\n        copyData = test(copyData.data, this.state.imageHeight, this.state.imageWidth);\n      }\n\n      ctx.putImageData(copyData, 0, 0);\n    };\n\n    this.setSortOption = e => {\n      this.setState({\n        currentSort: e.target.value\n      });\n    };\n\n    this.imageHandler = e => {\n      this.setState({\n        currentImage: e.target.files[0][\"name\"]\n      });\n    };\n\n    this.imageRef = /*#__PURE__*/React.createRef();\n    this.canvasRef = /*#__PURE__*/React.createRef();\n    this.state = {\n      currentImage: null,\n      imageHeight: null,\n      imageWidth: null,\n      currentSort: 'test'\n    };\n  } // componentDidMount() {\n  //     const canvas = this.canvasRef.current\n  //     const img = this.imageRef.current\n  //     const ctx = canvas.getContext(\"2d\")\n  //     canvas.height = 200\n  //     canvas.width = 200\n  //     img.onload = () => {\n  //         ctx.drawImage(img, 0, 0)\n  //       }\n  //     this.setState({\n  //         imageHeight:canvas.height,\n  //         imageWidth:canvas.width\n  //     })  \n  //   }\n\n\n  render() {\n    const hiddenStyle = {\n      display: \"none\"\n    };\n    const convertedStyle = {\n      border: \"1px solid red\"\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: this.imageHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"options\",\n        id: \"sort-options\",\n        onChange: this.setSortOption,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"sortByRed\",\n          children: \"Sort by red\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"sortByGreen\",\n          children: \"Sort by green\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"sortByBlue\",\n          children: \"Sort by blue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"sortByBright\",\n          children: \"Sort by brightness\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.drawNewImage,\n        children: \"SORT!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          ref: this.imageRef,\n          src: this.state.currentImage,\n          style: hiddenStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" to be converted \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: this.canvasRef,\n          style: convertedStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DragDropPreview, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nexport default CanvasApp;","map":{"version":3,"sources":["/Users/jaredricardo/Desktop/apps/Pixel-Sorter/src/components/CanvasApp.js"],"names":["React","Component","testImage","DragDropPreview","sortByRed","sortByGreen","sortByBlue","test","CanvasApp","constructor","props","drawNewImage","canvas","canvasRef","current","ctx","getContext","copyData","getImageData","width","height","putImageData","state","currentSort","data","imageHeight","imageWidth","setSortOption","e","setState","target","value","imageHandler","currentImage","files","imageRef","createRef","render","hiddenStyle","display","convertedStyle","border"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport testImage from \"./test-images/200.jpg\"\nimport DragDropPreview from './DragDropPreview'\nimport { sortByRed, sortByGreen, sortByBlue, test } from \"./functions\"\n\nexport class CanvasApp extends Component {\n    constructor(props) {\n        super(props)\n        this.imageRef = React.createRef()\n        this.canvasRef = React.createRef()\n        this.state = {\n            currentImage: null, \n            imageHeight: null,\n            imageWidth: null,\n            currentSort: 'test'\n        }\n    }\n\n    // componentDidMount() {\n    //     const canvas = this.canvasRef.current\n    //     const img = this.imageRef.current\n     \n    //     const ctx = canvas.getContext(\"2d\")\n\n    //     canvas.height = 200\n    //     canvas.width = 200\n\n    //     img.onload = () => {\n    //         ctx.drawImage(img, 0, 0)\n            \n    //       }\n    //     this.setState({\n    //         imageHeight:canvas.height,\n    //         imageWidth:canvas.width\n    //     })  \n    //   }\n\n\n    \n\n      \n    drawNewImage = () => {\n        const canvas = this.canvasRef.current\n        const ctx = canvas.getContext(\"2d\")\n        let copyData = ctx.getImageData(0,0, canvas.width, canvas.height)\n        ctx.putImageData(copyData, 0, 0)\n\n        if(this.state.currentSort === 'sortByRed') {\n            copyData = sortByRed(copyData.data, this.state.imageHeight, this.state.imageWidth)\n        }\n        if(this.state.currentSort === 'sortByGreen') {\n            copyData = sortByGreen(copyData.data, this.state.imageHeight, this.state.imageWidth)\n        }\n        if(this.state.currentSort === 'sortByBlue') {\n            copyData = sortByBlue(copyData.data, this.state.imageHeight, this.state.imageWidth)\n        } \n        if(this.state.currentSort === 'test') {\n            copyData = test(copyData.data, this.state.imageHeight, this.state.imageWidth)\n        } \n\n        ctx.putImageData(copyData,0 ,0 )\n    }\n\n    setSortOption = (e) => {\n        this.setState({\n            currentSort: e.target.value\n        })\n    }\n\n    imageHandler = (e) => {\n        this.setState({\n            currentImage: e.target.files[0][\"name\"]\n        })\n    }\n\n    \n    render() {\n\n        const hiddenStyle = {\n            display: \"none\"\n        }\n\n        const convertedStyle = {\n            border: \"1px solid red\"\n        }\n\n        return (\n            <div> \n                \n                <input type=\"file\" onChange={this.imageHandler}>\n                    \n                </input>\n\n                <select name=\"options\" id=\"sort-options\" onChange={this.setSortOption}>\n                    <option value=\"sortByRed\">Sort by red</option>\n                    <option value=\"sortByGreen\">Sort by green</option>\n                    <option value=\"sortByBlue\">Sort by blue</option>\n                    <option value=\"sortByBright\">Sort by brightness</option>\n                </select>\n\n                <button onClick={this.drawNewImage}>\n                    SORT!\n                </button>\n\n                <div className=\"container\">\n\n                    <img ref={this.imageRef} src={this.state.currentImage} style={hiddenStyle}/> \n\n                        <p> to be converted </p>\n\n                    <canvas ref={this.canvasRef}  style={convertedStyle}/> \n                </div>\n                \n                <DragDropPreview />\n            </div>\n        )\n    }\n}\n\n\nexport default CanvasApp\n"]},"metadata":{},"sourceType":"module"}