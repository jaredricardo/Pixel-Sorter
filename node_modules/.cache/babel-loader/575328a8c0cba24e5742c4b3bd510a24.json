{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jaredricardo/Desktop/apps/Pixel-Sorter/src/components/CanvasAppCopy.js\";\nimport React, { Component } from 'react';\nimport testImage from \"./test-images/200.jpg\";\nimport { arrowFunctionExpression } from '@babel/types';\nexport class CanvasAppCopy extends Component {\n  constructor(props) {\n    super(props);\n\n    this.drawNewImage = () => {\n      const canvas = this.refs.canvas;\n      const ctx = canvas.getContext(\"2d\");\n      let imageData = ctx.getImageData(0, 0, this.state.imageWidth, this.state.imageHeight);\n\n      for (let i = 0; i < imageData.data.length; i += 4) {\n        for (let j = 0; j < imageData.data.length - i - 4; j += 4) {\n          let curRed = imageData.data[i];\n          let curGreen = imageData.data[i + 1];\n          let curBlue = imageData.data[i + 2];\n          let curBright = (curRed + curGreen + curBlue) / 3;\n          let nextRed = imageData.data[i + 4];\n          let nextGreen = imageData.data[i + 5];\n          let nextBlue = imageData.data[i + 6];\n          let nextBright = (nextRed + nextGreen + nextBlue) / 3;\n\n          if (curBright < nextBright) {\n            imageData.data[i] = nextRed;\n            imageData.data[i + 1] = nextGreen;\n            imageData.data[i + 2] = nextBlue;\n            imageData.data[i + 4] = curRed;\n            imageData.data[i + 5] = curGreen;\n            imageData.data[i + 6] = curBlue;\n          }\n        }\n      } // ctx.putImageData(imageData, 0, 0)\n\n\n      console.log(imageData.data);\n      console.log('done');\n    };\n\n    this.state = {\n      imageHeight: null,\n      imageWidth: null\n    };\n  }\n\n  componentDidMount() {\n    const canvas = this.refs.canvas;\n    canvas.height = 200;\n    canvas.width = 200;\n    const ctx = canvas.getContext(\"2d\");\n    const img = this.refs.image;\n\n    img.onload = () => {\n      ctx.drawImage(img, 0, 0);\n    };\n\n    this.setState({\n      imageHeight: canvas.height,\n      imageWidth: canvas.width\n    });\n  }\n\n  render() {\n    const width = this.state.imageWidth;\n    const height = this.state.imageHeight;\n    const hidden = {\n      display: \"none\"\n    };\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.drawNewImage,\n        children: \"test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: \"canvas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          ref: \"image\",\n          src: testImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nexport default CanvasAppCopy;","map":{"version":3,"sources":["/Users/jaredricardo/Desktop/apps/Pixel-Sorter/src/components/CanvasAppCopy.js"],"names":["React","Component","testImage","arrowFunctionExpression","CanvasAppCopy","constructor","props","drawNewImage","canvas","refs","ctx","getContext","imageData","getImageData","state","imageWidth","imageHeight","i","data","length","j","curRed","curGreen","curBlue","curBright","nextRed","nextGreen","nextBlue","nextBright","console","log","componentDidMount","height","width","img","image","onload","drawImage","setState","render","hidden","display"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport testImage from \"./test-images/200.jpg\"\nimport { arrowFunctionExpression } from '@babel/types'\n\nexport class CanvasAppCopy extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n             imageHeight: null,\n             imageWidth: null\n        }\n    }\n\n    componentDidMount() {\n        const canvas = this.refs.canvas\n        canvas.height = 200\n        canvas.width = 200\n        const ctx = canvas.getContext(\"2d\")\n        const img = this.refs.image\n\n        img.onload = () => {\n            ctx.drawImage(img, 0, 0)\n          }\n        this.setState({\n            imageHeight:canvas.height,\n            imageWidth:canvas.width\n        })  \n      }\n\n\n    drawNewImage = () => {\n\n        const canvas = this.refs.canvas\n        const ctx = canvas.getContext(\"2d\")\n\n\n        let imageData = ctx.getImageData(0,0, this.state.imageWidth, this.state.imageHeight)\n\n        for(let i = 0; i < imageData.data.length; i+=4) {\n            for(let j = 0; j < imageData.data.length - i - 4; j+=4) {\n\n                let curRed = imageData.data[i]\n                let curGreen = imageData.data[i + 1]\n                let curBlue = imageData.data[i + 2]\n                let curBright = (curRed + curGreen + curBlue) / 3\n\n                let nextRed = imageData.data[i +4] \n                let nextGreen = imageData.data[i + 5]\n                let nextBlue = imageData.data[i + 6]\n                let nextBright = (nextRed + nextGreen + nextBlue) / 3\n\n                if(curBright < nextBright) {\n                    imageData.data[i] = nextRed\n                    imageData.data[i+1] = nextGreen\n                    imageData.data[i+2] = nextBlue\n                    imageData.data[i+4] = curRed\n                    imageData.data[i+5] = curGreen\n                    imageData.data[i+6] = curBlue\n                }\n\n            }\n        }\n\n        // ctx.putImageData(imageData, 0, 0)\n        console.log(imageData.data)\n        console.log('done')\n    }\n\n    \n    render() {\n\n        const width = this.state.imageWidth\n        const height = this.state.imageHeight\n\n        const hidden = {\n            display: \"none\"\n        }\n\n        return (\n            <React.Fragment> \n\n                {/* <div className=\"container\">\n                    <img src={testImage} id=\"img\"style={style}/>\n                </div> */}\n                \n                <button onClick={this.drawNewImage}>\n                    test\n                </button>\n\n                <div className=\"container\">\n                    <canvas ref=\"canvas\"/> \n                    <img ref=\"image\" src={testImage}  />\n                </div>\n                \n                <div> \n                    \n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default CanvasAppCopy\n"]},"metadata":{},"sourceType":"module"}