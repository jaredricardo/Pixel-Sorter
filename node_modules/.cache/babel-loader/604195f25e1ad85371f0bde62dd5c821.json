{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jaredricardo/Desktop/apps/drag drop unused rn/src/components/CanvasApp.js\";\nimport React, { Component } from 'react';\nimport testImage from \"./test-images/150.jpg\";\nimport { arrowFunctionExpression } from '@babel/types';\nexport class CanvasApp extends Component {\n  constructor(props) {\n    super(props);\n\n    this.test = data => {\n      const rowLength = this.state.imageWidth;\n      const colLength = this.state.imageHeight;\n      let row = [];\n      let col = [];\n      let twoDArr = [];\n\n      for (let i = 0; i < data.length; i += 4) {\n        row = [];\n\n        for (let j = 0; j < rowLength; j++) {\n          let pixel = [data[i], data[i + 1], data[i + 2], data[i + 3]];\n          row.push(pixel);\n        }\n\n        twoDArr.push(row);\n      }\n\n      console.log(twoDArr);\n    };\n\n    this.drawNewImage = () => {\n      const canvas = this.refs.canvas;\n      const ctx = canvas.getContext(\"2d\");\n      let copyData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n      ctx.putImageData(copyData, 0, 0);\n      this.test(copyData.data);\n      ctx.putImageData(copyData, 0, 0);\n    };\n\n    this.state = {\n      imageHeight: null,\n      imageWidth: null\n    };\n  }\n\n  componentDidMount() {\n    const canvas = this.refs.canvas;\n    canvas.height = 200;\n    canvas.width = 200;\n    const ctx = canvas.getContext(\"2d\");\n    const img = this.refs.image;\n\n    img.onload = () => {\n      ctx.drawImage(img, 0, 0);\n    };\n\n    this.setState({\n      imageHeight: canvas.height,\n      imageWidth: canvas.width\n    });\n  }\n\n  render() {\n    const width = this.state.imageWidth;\n    const height = this.state.imageHeight;\n    const hidden = {\n      display: \"none\"\n    };\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.drawNewImage,\n        children: \"test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: \"canvas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          ref: \"image\",\n          src: testImage,\n          style: hidden\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nexport default CanvasApp;","map":{"version":3,"sources":["/Users/jaredricardo/Desktop/apps/drag drop unused rn/src/components/CanvasApp.js"],"names":["React","Component","testImage","arrowFunctionExpression","CanvasApp","constructor","props","test","data","rowLength","state","imageWidth","colLength","imageHeight","row","col","twoDArr","i","length","j","pixel","push","console","log","drawNewImage","canvas","refs","ctx","getContext","copyData","getImageData","width","height","putImageData","componentDidMount","img","image","onload","drawImage","setState","render","hidden","display"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,SAASC,uBAAT,QAAwC,cAAxC;AAEA,OAAO,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;AACrCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SA0BnBC,IA1BmB,GA0BXC,IAAD,IAAU;AACb,YAAMC,SAAS,GAAG,KAAKC,KAAL,CAAWC,UAA7B;AACA,YAAMC,SAAS,GAAG,KAAKF,KAAL,CAAWG,WAA7B;AACA,UAAIC,GAAG,GAAG,EAAV;AACA,UAAIC,GAAG,GAAG,EAAV;AACA,UAAIC,OAAO,GAAG,EAAd;;AAEA,WAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGT,IAAI,CAACU,MAAxB,EAAgCD,CAAC,IAAE,CAAnC,EAAsC;AAClCH,QAAAA,GAAG,GAAG,EAAN;;AACA,aAAI,IAAIK,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGV,SAAnB,EAA8BU,CAAC,EAA/B,EAAmC;AAC/B,cAAIC,KAAK,GAAG,CAACZ,IAAI,CAACS,CAAD,CAAL,EAAST,IAAI,CAACS,CAAC,GAAG,CAAL,CAAb,EAAqBT,IAAI,CAACS,CAAC,GAAG,CAAL,CAAzB,EAAiCT,IAAI,CAACS,CAAC,GAAG,CAAL,CAArC,CAAZ;AACAH,UAAAA,GAAG,CAACO,IAAJ,CAASD,KAAT;AACH;;AACDJ,QAAAA,OAAO,CAACK,IAAR,CAAaP,GAAb;AACH;;AACDQ,MAAAA,OAAO,CAACC,GAAR,CAAYP,OAAZ;AACH,KA1CkB;;AAAA,SA6CnBQ,YA7CmB,GA6CJ,MAAM;AACjB,YAAMC,MAAM,GAAG,KAAKC,IAAL,CAAUD,MAAzB;AACA,YAAME,GAAG,GAAGF,MAAM,CAACG,UAAP,CAAkB,IAAlB,CAAZ;AACA,UAAIC,QAAQ,GAAGF,GAAG,CAACG,YAAJ,CAAiB,CAAjB,EAAmB,CAAnB,EAAsBL,MAAM,CAACM,KAA7B,EAAoCN,MAAM,CAACO,MAA3C,CAAf;AACAL,MAAAA,GAAG,CAACM,YAAJ,CAAiBJ,QAAjB,EAA2B,CAA3B,EAA8B,CAA9B;AAGA,WAAKtB,IAAL,CAAUsB,QAAQ,CAACrB,IAAnB;AAEAmB,MAAAA,GAAG,CAACM,YAAJ,CAAiBJ,QAAjB,EAA0B,CAA1B,EAA6B,CAA7B;AACH,KAvDkB;;AAEf,SAAKnB,KAAL,GAAa;AACRG,MAAAA,WAAW,EAAE,IADL;AAERF,MAAAA,UAAU,EAAE;AAFJ,KAAb;AAIH;;AAEDuB,EAAAA,iBAAiB,GAAG;AAChB,UAAMT,MAAM,GAAG,KAAKC,IAAL,CAAUD,MAAzB;AACAA,IAAAA,MAAM,CAACO,MAAP,GAAgB,GAAhB;AACAP,IAAAA,MAAM,CAACM,KAAP,GAAe,GAAf;AACA,UAAMJ,GAAG,GAAGF,MAAM,CAACG,UAAP,CAAkB,IAAlB,CAAZ;AACA,UAAMO,GAAG,GAAG,KAAKT,IAAL,CAAUU,KAAtB;;AAEAD,IAAAA,GAAG,CAACE,MAAJ,GAAa,MAAM;AACfV,MAAAA,GAAG,CAACW,SAAJ,CAAcH,GAAd,EAAmB,CAAnB,EAAsB,CAAtB;AACD,KAFH;;AAGA,SAAKI,QAAL,CAAc;AACV1B,MAAAA,WAAW,EAACY,MAAM,CAACO,MADT;AAEVrB,MAAAA,UAAU,EAACc,MAAM,CAACM;AAFR,KAAd;AAID;;AAoCHS,EAAAA,MAAM,GAAG;AACL,UAAMT,KAAK,GAAG,KAAKrB,KAAL,CAAWC,UAAzB;AACA,UAAMqB,MAAM,GAAG,KAAKtB,KAAL,CAAWG,WAA1B;AAGA,UAAM4B,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AADE,KAAf;AAIA,wBACI,QAAC,KAAD,CAAO,QAAP;AAAA,8BAMI;AAAQ,QAAA,OAAO,EAAE,KAAKlB,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,eAUI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACI;AAAQ,UAAA,GAAG,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,GAAG,EAAC,OAAT;AAAiB,UAAA,GAAG,EAAEtB,SAAtB;AAAiC,UAAA,KAAK,EAAEuC;AAAxC;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ,eAeI;AAAA;AAAA;AAAA;AAAA,cAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAqBH;;AAzFoC;AA4FzC,eAAerC,SAAf","sourcesContent":["import React, { Component } from 'react'\nimport testImage from \"./test-images/150.jpg\"\nimport { arrowFunctionExpression } from '@babel/types'\n\nexport class CanvasApp extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n             imageHeight: null,\n             imageWidth: null\n        }\n    }\n\n    componentDidMount() {\n        const canvas = this.refs.canvas\n        canvas.height = 200\n        canvas.width = 200\n        const ctx = canvas.getContext(\"2d\")\n        const img = this.refs.image\n\n        img.onload = () => {\n            ctx.drawImage(img, 0, 0)\n          }\n        this.setState({\n            imageHeight:canvas.height,\n            imageWidth:canvas.width\n        })  \n      }\n\n   \n\n    test = (data) => {\n        const rowLength = this.state.imageWidth\n        const colLength = this.state.imageHeight \n        let row = []\n        let col = []\n        let twoDArr = []\n        \n        for(let i = 0; i < data.length; i+=4) {\n            row = []\n            for(let j = 0; j < rowLength; j++) {\n                let pixel = [data[i],data[i + 1],data[i + 2],data[i + 3]]\n                row.push(pixel)\n            }\n            twoDArr.push(row)\n        }\n        console.log(twoDArr)\n    }\n\n\n    drawNewImage = () => {\n        const canvas = this.refs.canvas\n        const ctx = canvas.getContext(\"2d\")\n        let copyData = ctx.getImageData(0,0, canvas.width, canvas.height)\n        ctx.putImageData(copyData, 0, 0)\n\n       \n        this.test(copyData.data)\n\n        ctx.putImageData(copyData,0 ,0 )\n    }\n\n    \n    render() {\n        const width = this.state.imageWidth\n        const height = this.state.imageHeight\n        \n\n        const hidden = {\n            display: \"none\"\n        }\n\n        return (\n            <React.Fragment> \n\n                {/* <div className=\"container\">\n                    <img src={testImage} id=\"img\"style={style}/>\n                </div> */}\n                \n                <button onClick={this.drawNewImage}>\n                    test\n                </button>\n\n                <div className=\"container\">\n                    <canvas ref=\"canvas\"/> \n                    <img ref=\"image\" src={testImage} style={hidden} />\n                </div>\n                \n                <div> \n                    \n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default CanvasApp\n"]},"metadata":{},"sourceType":"module"}