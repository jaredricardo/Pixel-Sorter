{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jaredricardo/Desktop/apps/Pixel-Sorter/src/components/CanvasApp.js\";\nimport React, { Component } from 'react';\nimport testImage from \"./test-images/300x200.jpg\";\nimport { test, nativeSort_COL2x, nativeSort_COL, bubbleSort, nativeSort } from \"./functions\";\nimport Spinner from 'react-bootstrap/Spinner';\nimport { Row, Col, Container, Dropdown, DropdownButton } from \"react-bootstrap\";\nimport { identifier, isMemberExpression } from '@babel/types';\nexport class CanvasApp extends Component {\n  constructor(props) {\n    super(props);\n\n    this.drawNewImage = () => {\n      if (!this.state.imageSelected) return alert(\"please load an image\");\n      this.setState({\n        imageLoading: true\n      }, this.resetLoading);\n    };\n\n    this.sortThePixels = () => {\n      const algo = this.state.currentSort;\n      const canvas = this.canvasRef.current;\n      const ctx = canvas.getContext(\"2d\");\n      let copyData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n\n      if (algo === 'test') {\n        copyData = test(copyData.data, this.state.imageHeight, this.state.imageWidth);\n      }\n\n      if (algo === 'nativeSort_COL_2x') {\n        copyData = nativeSort_COL2x(copyData.data, this.state.imageHeight, this.state.imageWidth);\n      }\n\n      if (algo === 'nativeSort_COL') {\n        copyData = nativeSort_COL(copyData.data, this.state.imageHeight, this.state.imageWidth);\n      }\n\n      if (algo === 'bubbleSort') {\n        copyData = bubbleSort(copyData.data, this.state.imageHeight, this.state.imageWidth);\n      }\n\n      if (algo === 'nativeSort') {\n        copyData = nativeSort(copyData.data, this.state.imageHeight, this.state.imageWidth);\n      }\n\n      ctx.putImageData(copyData, 0, 0);\n    };\n\n    this.setSortOption = e => {\n      this.setState({\n        currentSort: e.target.value\n      });\n    };\n\n    this.imageLoadHandler = e => {\n      const canvas = this.canvasRef.current;\n      const ctx = canvas.getContext(\"2d\");\n      const reader = new FileReader();\n      const img = new Image();\n\n      reader.onload = function (event) {\n        img.onload = function () {\n          canvas.width = this.width;\n          canvas.height = this.height;\n          ctx.drawImage(img, 0, 0);\n        };\n\n        img.src = event.target.result;\n      };\n\n      reader.readAsDataURL(e.target.files[0]);\n      this.setState({\n        currentImageSrc: null,\n        imageSelected: true,\n        imageLoading: false,\n        imageHeight: 1500,\n        // needs to be set dynamically\n        imageWidth: 1000 // needs to be set dybnamically \n\n      });\n    };\n\n    this.resetImage = () => {};\n\n    this.imageRef = /*#__PURE__*/React.createRef();\n    this.canvasRef = /*#__PURE__*/React.createRef();\n    this.state = {\n      currentImageSrc: null,\n      imageSelected: false,\n      imageLoading: false,\n      imageHeight: null,\n      imageWidth: null,\n      currentSort: 'test'\n    };\n  } // componentDidMount() {\n  // }\n\n\n  render() {\n    // const hiddenStyle = {\n    //     display: \"none\"\n    // }\n    const maxStyle = {\n      maxHeight: \"700px\",\n      width: \"auto\"\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        ref: this.uploadedRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"options\",\n        id: \"sort-options\",\n        onChange: this.setSortOption,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"test\",\n          children: \"Test\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"nativeSort_COL_2x\",\n          children: \"Columned Native Sort x 2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"nativeSort_COL\",\n          children: \"Columned Native Sort\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"bubbleSort\",\n          children: \"Bubble Sort\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"nativeSort\",\n          children: \"Native Sort\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.drawNewImage,\n        children: \"Sort image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.resetImage,\n        children: \"Reset image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: this.canvasRef,\n          style: maxStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nexport default CanvasApp;","map":{"version":3,"sources":["/Users/jaredricardo/Desktop/apps/Pixel-Sorter/src/components/CanvasApp.js"],"names":["React","Component","testImage","test","nativeSort_COL2x","nativeSort_COL","bubbleSort","nativeSort","Spinner","Row","Col","Container","Dropdown","DropdownButton","identifier","isMemberExpression","CanvasApp","constructor","props","drawNewImage","state","imageSelected","alert","setState","imageLoading","resetLoading","sortThePixels","algo","currentSort","canvas","canvasRef","current","ctx","getContext","copyData","getImageData","width","height","data","imageHeight","imageWidth","putImageData","setSortOption","e","target","value","imageLoadHandler","reader","FileReader","img","Image","onload","event","drawImage","src","result","readAsDataURL","files","currentImageSrc","resetImage","imageRef","createRef","render","maxStyle","maxHeight","uploadedRef"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport testImage from \"./test-images/300x200.jpg\"\nimport { test, nativeSort_COL2x, nativeSort_COL, bubbleSort, nativeSort } from \"./functions\"\nimport Spinner from 'react-bootstrap/Spinner';\nimport { Row, Col, Container, Dropdown, DropdownButton } from \"react-bootstrap\"\nimport { identifier, isMemberExpression } from '@babel/types'\n\n\nexport class CanvasApp extends Component {\n    constructor(props) {\n        super(props)\n        this.imageRef = React.createRef()\n        this.canvasRef = React.createRef()\n        this.state = {\n            currentImageSrc: null,\n            imageSelected: false,\n            imageLoading: false, \n            imageHeight: null,\n            imageWidth: null,\n            currentSort: 'test'\n        }\n    }\n\n  \n    // componentDidMount() {\n   \n    // }\n\n\n\n      \n    drawNewImage = () => {\n        if(!this.state.imageSelected) return alert(\"please load an image\")\n\n        this.setState({\n            imageLoading: true\n        }, this.resetLoading)\n    }\n\n    sortThePixels = () => {\n        const algo = this.state.currentSort\n        const canvas = this.canvasRef.current\n        const ctx = canvas.getContext(\"2d\")\n        let copyData = ctx.getImageData(0,0, canvas.width, canvas.height)\n\n\n        if(algo === 'test') {\n            copyData = test(copyData.data, this.state.imageHeight, this.state.imageWidth)\n        } \n        if(algo === 'nativeSort_COL_2x') {\n            copyData = nativeSort_COL2x(copyData.data, this.state.imageHeight, this.state.imageWidth)\n        } \n        if(algo === 'nativeSort_COL') {\n            copyData = nativeSort_COL(copyData.data, this.state.imageHeight, this.state.imageWidth)\n        } \n        if(algo === 'bubbleSort') {\n            copyData = bubbleSort(copyData.data, this.state.imageHeight, this.state.imageWidth)\n        } \n        if(algo === 'nativeSort') {\n            copyData = nativeSort(copyData.data, this.state.imageHeight, this.state.imageWidth)\n        } \n        ctx.putImageData(copyData,0 ,0)\n    }\n\n\n    setSortOption = (e) => {\n        this.setState({\n            currentSort: e.target.value\n        })\n    }\n\n    imageLoadHandler = (e) => {\n        const canvas = this.canvasRef.current\n        const ctx = canvas.getContext(\"2d\")\n        const reader = new FileReader();\n        const img = new Image();\n\n        reader.onload = function(event){\n            img.onload = function(){\n                canvas.width = this.width;\n                canvas.height = this.height;\n                ctx.drawImage(img,0,0);\n                }\n            img.src = event.target.result;\n        }\n    \n        reader.readAsDataURL(e.target.files[0]); \n\n        this.setState({\n            currentImageSrc: null,\n            imageSelected: true,\n            imageLoading: false,\n            imageHeight: 1500,      // needs to be set dynamically\n            imageWidth: 1000,    // needs to be set dybnamically \n        })\n    }\n\n    resetImage = () => {\n    \n    }\n\n    render() {\n\n        // const hiddenStyle = {\n        //     display: \"none\"\n        // }\n        \n        const maxStyle = {\n            maxHeight: \"700px\",\n            width: \"auto\" \n        }\n\n        return (\n\n            <div> \n                \n                <input type=\"file\" accept=\"image/*\" ref={this.uploadedRef} >\n                    \n                </input>\n\n                <select name=\"options\" id=\"sort-options\" onChange={this.setSortOption}>\n                    <option value=\"test\">Test</option>\n                    <option value=\"nativeSort_COL_2x\">Columned Native Sort x 2</option>\n                    <option value=\"nativeSort_COL\">Columned Native Sort</option>\n                    <option value=\"bubbleSort\">Bubble Sort</option>\n                    <option value=\"nativeSort\">Native Sort</option>\n                </select>\n\n                <button onClick={this.drawNewImage}>\n                    Sort image\n                    {/* {this.checkLoading()} */}\n                </button>\n\n                <button onClick={this.resetImage}>\n                    Reset image\n                </button>\n\n                \n                <div className=\"container\" >\n\n                    {/* <img ref={this.imageRef} src={testImage} />  */}\n\n                        <canvas ref={this.canvasRef} style={maxStyle}/>  \n\n                </div>\n                \n           \n            </div>\n        )\n    }\n}\n\n\nexport default CanvasApp\n"]},"metadata":{},"sourceType":"module"}