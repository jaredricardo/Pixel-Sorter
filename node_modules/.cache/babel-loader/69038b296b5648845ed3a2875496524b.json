{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jaredricardo/Desktop/apps/Pixel-Sorter/src/components/CanvasApp.js\";\nimport React, { Component } from 'react';\nimport testImage from \"./test-images/200.jpg\";\nimport { arrowFunctionExpression } from '@babel/types';\nimport { sortByRed } from \"./functions\";\nexport class CanvasApp extends Component {\n  constructor(props) {\n    super(props);\n\n    this.drawNewImage = () => {\n      const canvas = this.canvasRef.current;\n      const ctx = canvas.getContext(\"2d\");\n      let copyData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n      ctx.putImageData(copyData, 0, 0);\n      copyData = sortByRed(copyData.data, this.state.imageHeight, this.state.imageWidth);\n      ctx.putImageData(copyData, 0, 0);\n    };\n\n    this.setOption = e => {\n      // const currentSort = e.target.value\n      this.setState({\n        currentSort: e.target.value\n      });\n      console.log(this.state.currentSort);\n    };\n\n    this.imageRef = /*#__PURE__*/React.createRef();\n    this.canvasRef = /*#__PURE__*/React.createRef();\n    this.state = {\n      imageHeight: null,\n      imageWidth: null,\n      currentSort: null\n    };\n  }\n\n  componentDidMount() {\n    const canvas = this.canvasRef.current;\n    const img = this.imageRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    canvas.height = 200;\n    canvas.width = 200;\n\n    img.onload = () => {\n      ctx.drawImage(img, 0, 0);\n    };\n\n    this.setState({\n      imageHeight: canvas.height,\n      imageWidth: canvas.width\n    });\n  }\n\n  render() {\n    const hiddenStyle = {\n      display: \"none\"\n    };\n    const convertedStyle = {\n      border: \"1px solid red\"\n    };\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.drawNewImage,\n        children: \"test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"options\",\n        id: \"sort-options\",\n        onChange: this.setOption,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"sortByRed\",\n          children: \"Sort by red\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"sortByGreen\",\n          children: \"Sort by blue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          vale: \"sortByBlue\",\n          children: \"Sort by reen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"sortByBright\",\n          children: \"Sort by brightness\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          ref: this.imageRef,\n          src: testImage,\n          style: hiddenStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" to be converted \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: this.canvasRef,\n          style: convertedStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nexport default CanvasApp;","map":{"version":3,"sources":["/Users/jaredricardo/Desktop/apps/Pixel-Sorter/src/components/CanvasApp.js"],"names":["React","Component","testImage","arrowFunctionExpression","sortByRed","CanvasApp","constructor","props","drawNewImage","canvas","canvasRef","current","ctx","getContext","copyData","getImageData","width","height","putImageData","data","state","imageHeight","imageWidth","setOption","e","setState","currentSort","target","value","console","log","imageRef","createRef","componentDidMount","img","onload","drawImage","render","hiddenStyle","display","convertedStyle","border"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport testImage from \"./test-images/200.jpg\"\nimport { arrowFunctionExpression } from '@babel/types'\nimport { sortByRed } from \"./functions\"\n\nexport class CanvasApp extends Component {\n    constructor(props) {\n        super(props)\n        this.imageRef = React.createRef()\n        this.canvasRef = React.createRef()\n        this.state = {\n             imageHeight: null,\n             imageWidth: null,\n             currentSort: null\n        }\n    }\n\n    componentDidMount() {\n        const canvas = this.canvasRef.current\n        const img = this.imageRef.current\n     \n        const ctx = canvas.getContext(\"2d\")\n\n        canvas.height = 200\n        canvas.width = 200\n\n        img.onload = () => {\n            ctx.drawImage(img, 0, 0)\n            \n          }\n        this.setState({\n            imageHeight:canvas.height,\n            imageWidth:canvas.width\n        })  \n      }\n      \n    drawNewImage = () => {\n        const canvas = this.canvasRef.current\n        const ctx = canvas.getContext(\"2d\")\n        let copyData = ctx.getImageData(0,0, canvas.width, canvas.height)\n        ctx.putImageData(copyData, 0, 0)\n\n        \n        copyData = sortByRed(copyData.data, this.state.imageHeight, this.state.imageWidth)\n\n        ctx.putImageData(copyData,0 ,0 )\n    }\n\n    setOption = (e) => {\n        // const currentSort = e.target.value\n        this.setState({\n            currentSort: e.target.value\n        })\n        console.log(this.state.currentSort)\n    }\n\n    \n    render() {\n\n        const hiddenStyle = {\n            display: \"none\"\n        }\n\n        const convertedStyle = {\n            border: \"1px solid red\"\n        }\n\n        return (\n            <React.Fragment> \n                \n                <button onClick={this.drawNewImage}>\n                    test\n                </button>\n                <select name=\"options\" id=\"sort-options\" onChange={this.setOption}>\n                    <option value=\"sortByRed\">Sort by red</option>\n                    <option value=\"sortByGreen\">Sort by blue</option>\n                    <option vale=\"sortByBlue\">Sort by reen</option>\n                    <option value=\"sortByBright\">Sort by brightness</option>\n                </select>\n\n                <div className=\"container\">\n\n                    <img ref={this.imageRef} src={testImage} style={hiddenStyle}/> \n\n                        <p> to be converted </p>\n\n                    <canvas ref={this.canvasRef}  style={convertedStyle}/> \n                </div>\n                \n                <div> \n                    \n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\n\nexport default CanvasApp\n"]},"metadata":{},"sourceType":"module"}