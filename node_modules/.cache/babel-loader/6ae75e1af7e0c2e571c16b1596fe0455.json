{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jaredricardo/Desktop/apps/pixel-sorter/src/components/DragDrop.js\";\nimport React, { Component } from 'react';\nimport '../App.css';\nexport class DragDrop extends Component {\n  constructor(props) {\n    super(props);\n\n    this.dragOver = e => {\n      e.preventDefault();\n    };\n\n    this.dragEnter = e => {\n      e.preventDefault();\n    };\n\n    this.dragLeave = e => {\n      e.preventDefault();\n    };\n\n    this.fileDrop = e => {\n      e.preventDefault();\n      const files = e.dataTransfer.files;\n\n      if (files.length) {\n        this.handleFiles(files);\n      }\n\n      console.log(files);\n    };\n\n    this.validateFile = file => {\n      const validTypes = ['image/jpeg', 'image/jpg', 'image/png'];\n      return validTypes.indexOf(file.type) === -1 ? false : true;\n    };\n\n    this.handleFiles = files => {\n      for (let i = 0; i < files.length; i++) {\n        if (validateFile(files[i])) {\n          setSelectedFiles(prevArray => [...prevArray, files[i]]);\n        } else {\n          files[i]['invalid'] = true;\n          setSelectedFiles(prevArray => [...prevArray, files[i]]);\n          setErrorMessage('File type not permitted');\n          setUnsupportedFiles(prevArray => [...prevArray, files[i]]);\n        }\n      }\n    };\n\n    this.state = {\n      image: null\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"drop-container\",\n          onDragOver: this.dragOver,\n          onDragEnter: this.dragEnter,\n          onDragLeave: this.dragLeave,\n          onDrop: this.fileDrop\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nexport default DragDrop;","map":{"version":3,"sources":["/Users/jaredricardo/Desktop/apps/pixel-sorter/src/components/DragDrop.js"],"names":["React","Component","DragDrop","constructor","props","dragOver","e","preventDefault","dragEnter","dragLeave","fileDrop","files","dataTransfer","length","handleFiles","console","log","validateFile","file","validTypes","indexOf","type","i","setSelectedFiles","prevArray","setErrorMessage","setUnsupportedFiles","state","image","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,YAAP;AAEA,OAAO,MAAMC,QAAN,SAAuBD,SAAvB,CAAiC;AACpCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAQnBC,QARmB,GAQPC,CAAD,IAAO;AACdA,MAAAA,CAAC,CAACC,cAAF;AACH,KAVkB;;AAAA,SAYnBC,SAZmB,GAYNF,CAAD,IAAO;AACfA,MAAAA,CAAC,CAACC,cAAF;AACH,KAdkB;;AAAA,SAgBnBE,SAhBmB,GAgBNH,CAAD,IAAO;AACfA,MAAAA,CAAC,CAACC,cAAF;AACH,KAlBkB;;AAAA,SAoBnBG,QApBmB,GAoBPJ,CAAD,IAAO;AACdA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAMI,KAAK,GAAGL,CAAC,CAACM,YAAF,CAAeD,KAA7B;;AACA,UAAGA,KAAK,CAACE,MAAT,EAAiB;AACb,aAAKC,WAAL,CAAiBH,KAAjB;AACH;;AACDI,MAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACH,KA3BkB;;AAAA,SA6BnBM,YA7BmB,GA6BHC,IAAD,IAAU;AACrB,YAAMC,UAAU,GAAG,CAAC,YAAD,EAAe,WAAf,EAA4B,WAA5B,CAAnB;AACA,aAAOA,UAAU,CAACC,OAAX,CAAmBF,IAAI,CAACG,IAAxB,MAAkC,CAAC,CAAnC,GAAuC,KAAvC,GAA+C,IAAtD;AACH,KAhCkB;;AAAA,SAkCnBP,WAlCmB,GAkCJH,KAAD,IAAW;AACrB,WAAI,IAAIW,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGX,KAAK,CAACE,MAAzB,EAAiCS,CAAC,EAAlC,EAAsC;AAClC,YAAIL,YAAY,CAACN,KAAK,CAACW,CAAD,CAAN,CAAhB,EAA4B;AACxBC,UAAAA,gBAAgB,CAACC,SAAS,IAAI,CAAC,GAAGA,SAAJ,EAAeb,KAAK,CAACW,CAAD,CAApB,CAAd,CAAhB;AACH,SAFD,MAEO;AACHX,UAAAA,KAAK,CAACW,CAAD,CAAL,CAAS,SAAT,IAAsB,IAAtB;AACAC,UAAAA,gBAAgB,CAACC,SAAS,IAAI,CAAC,GAAGA,SAAJ,EAAeb,KAAK,CAACW,CAAD,CAApB,CAAd,CAAhB;AACAG,UAAAA,eAAe,CAAC,yBAAD,CAAf;AACAC,UAAAA,mBAAmB,CAACF,SAAS,IAAI,CAAC,GAAGA,SAAJ,EAAeb,KAAK,CAACW,CAAD,CAApB,CAAd,CAAnB;AACH;AACJ;AACJ,KA7CkB;;AAGf,SAAKK,KAAL,GAAa;AACRC,MAAAA,KAAK,EAAE;AADC,KAAb;AAGH;;AAyCDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,gBAAf;AACI,UAAA,UAAU,EAAE,KAAKxB,QADrB;AAEI,UAAA,WAAW,EAAE,KAAKG,SAFtB;AAGI,UAAA,WAAW,EAAE,KAAKC,SAHtB;AAII,UAAA,MAAM,EAAE,KAAKC;AAJjB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAcH;;AA/DmC;AAkExC,eAAeR,QAAf","sourcesContent":["import React, { Component } from 'react'\nimport '../App.css'\n\nexport class DragDrop extends Component {\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n             image: null\n        }\n    }\n\n    dragOver = (e) => {\n        e.preventDefault();\n    }\n    \n    dragEnter = (e) => {\n        e.preventDefault();\n    }\n    \n    dragLeave = (e) => {\n        e.preventDefault();\n    }\n    \n    fileDrop = (e) => {\n        e.preventDefault();\n        const files = e.dataTransfer.files;\n        if(files.length) {\n            this.handleFiles(files)\n        }\n        console.log(files);\n    }\n\n    validateFile = (file) => {\n        const validTypes = ['image/jpeg', 'image/jpg', 'image/png'];\n        return validTypes.indexOf(file.type) === -1 ? false : true \n    }\n\n    handleFiles = (files) => {\n        for(let i = 0; i < files.length; i++) {\n            if (validateFile(files[i])) {\n                setSelectedFiles(prevArray => [...prevArray, files[i]]);\n            } else {\n                files[i]['invalid'] = true;\n                setSelectedFiles(prevArray => [...prevArray, files[i]]);\n                setErrorMessage('File type not permitted');\n                setUnsupportedFiles(prevArray => [...prevArray, files[i]]);\n            }\n        }\n    }\n\n    render() {    \n        return (\n            <div>\n                <div className=\"container\">\n                    <div className=\"drop-container\"\n                        onDragOver={this.dragOver}\n                        onDragEnter={this.dragEnter}\n                        onDragLeave={this.dragLeave}\n                        onDrop={this.fileDrop}>\n\n\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default DragDrop\n"]},"metadata":{},"sourceType":"module"}