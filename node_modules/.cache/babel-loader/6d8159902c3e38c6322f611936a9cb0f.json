{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jaredricardo/Desktop/apps/pixel-sorter/src/components/DragDrop.js\",\n    _s2 = $RefreshSig$();\n\nimport { useDropzone } from 'react-dropzone';\nimport React, { useEffect, useState } from 'react';\nimport '../App.css';\n\nfunction DragDrop(props) {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const {\n    acceptedFiles,\n    getRootProps,\n    getInputProps\n  } = useDropzone();\n  const thumbsContainer = {\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    marginTop: 16\n  };\n  const thumb = {\n    display: 'inline-flex',\n    borderRadius: 2,\n    border: '1px solid #eaeaea',\n    marginBottom: 8,\n    marginRight: 8,\n    width: 100,\n    height: 100,\n    padding: 4,\n    boxSizing: 'border-box'\n  };\n  const thumbInner = {\n    display: 'flex',\n    minWidth: 0,\n    overflow: 'hidden'\n  };\n  const img = {\n    display: 'block',\n    width: 'auto',\n    height: '100%'\n  };\n\n  function Previews(props) {\n    _s();\n\n    const [files, setFiles] = useState([]);\n    const {\n      getRootProps,\n      getInputProps\n    } = useDropzone({\n      accept: 'image/*',\n      onDrop: acceptedFiles => {\n        setFiles(acceptedFiles.map(file => Object.assign(file, {\n          preview: URL.createObjectURL(file)\n        })));\n      }\n    });\n    const thumbs = files.map(file => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: thumb,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: thumbInner,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: file.preview,\n          style: img\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, file.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this));\n    useEffect(() => () => {\n      // Make sure to revoke the data uris to avoid memory leaks\n      files.forEach(file => URL.revokeObjectURL(file.preview));\n    }, [files]);\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", { ...getRootProps({\n          className: 'dropzone'\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Drag 'n' drop some files here, or click to select files\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n        style: thumbsContainer,\n        children: thumbs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this);\n  }\n\n  _s(Previews, \"HtUHmGo3hwDZKSmIKg3riAANKQ4=\", false, function () {\n    return [useDropzone];\n  });\n\n  /*#__PURE__*/\n  _jsxDEV(Previews, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 3\n  }, this);\n\n  const files = acceptedFiles.map(file => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [file.path, \" - \", file.size, \" bytes\"]\n  }, file.path, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", { ...getRootProps({\n        className: 'dropzone drop-area'\n      }),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Drag 'n' drop some files here, or click to select files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: files\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(DragDrop, \"eAh/RLN6rbEoG6HK5edg/Q8oEk0=\", false, function () {\n  return [useDropzone];\n});\n\n_c = DragDrop;\nexport default DragDrop;\n\nvar _c;\n\n$RefreshReg$(_c, \"DragDrop\");","map":{"version":3,"sources":["/Users/jaredricardo/Desktop/apps/pixel-sorter/src/components/DragDrop.js"],"names":["useDropzone","React","useEffect","useState","DragDrop","props","acceptedFiles","getRootProps","getInputProps","thumbsContainer","display","flexDirection","flexWrap","marginTop","thumb","borderRadius","border","marginBottom","marginRight","width","height","padding","boxSizing","thumbInner","minWidth","overflow","img","Previews","files","setFiles","accept","onDrop","map","file","Object","assign","preview","URL","createObjectURL","thumbs","name","forEach","revokeObjectURL","className","path","size"],"mappings":"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","sourcesContent":["import {useDropzone} from 'react-dropzone';\nimport React, {useEffect, useState} from 'react';\nimport '../App.css'\n\nfunction DragDrop(props) {\n  const {acceptedFiles, getRootProps, getInputProps} = useDropzone();\n\n\nconst thumbsContainer = {\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    marginTop: 16\n  };\n  \n  const thumb = {\n    display: 'inline-flex',\n    borderRadius: 2,\n    border: '1px solid #eaeaea',\n    marginBottom: 8,\n    marginRight: 8,\n    width: 100,\n    height: 100,\n    padding: 4,\n    boxSizing: 'border-box'\n  };\n  \n  const thumbInner = {\n    display: 'flex',\n    minWidth: 0,\n    overflow: 'hidden'\n  };\n  \n  const img = {\n    display: 'block',\n    width: 'auto',\n    height: '100%'\n  };\n\n\n  function Previews(props) {\n    const [files, setFiles] = useState([]);\n    const {getRootProps, getInputProps} = useDropzone({\n      accept: 'image/*',\n      onDrop: acceptedFiles => {\n        setFiles(acceptedFiles.map(file => Object.assign(file, {\n          preview: URL.createObjectURL(file)\n        })));\n      }\n    });\n    \n    const thumbs = files.map(file => (\n      <div style={thumb} key={file.name}>\n        <div style={thumbInner}>\n          <img\n            src={file.preview}\n            style={img}\n          />\n        </div>\n      </div>\n    ));\n  \n    useEffect(() => () => {\n      // Make sure to revoke the data uris to avoid memory leaks\n      files.forEach(file => URL.revokeObjectURL(file.preview));\n    }, [files]);\n  \n    return (\n      <section className=\"container\">\n        <div {...getRootProps({className: 'dropzone'})}>\n          <input {...getInputProps()} />\n          <p>Drag 'n' drop some files here, or click to select files</p>\n        </div>\n        <aside style={thumbsContainer}>\n          {thumbs}\n        </aside>\n      </section>\n    );\n  }\n  \n  <Previews />\n  \n  const files = acceptedFiles.map(file => (\n    <li key={file.path}>\n      {file.path} - {file.size} bytes \n    </li>\n  ));\n\n  return (\n    <section className=\"container\">\n      <div {...getRootProps({className: 'dropzone drop-area'})}>\n        <input {...getInputProps()}/>\n            <p>Drag 'n' drop some files here, or click to select files</p>\n      </div>\n      <aside>\n        <h4>Files</h4>\n        <ul>{files}</ul>\n      </aside>\n    </section>\n  );\n}\n\nexport default DragDrop"]},"metadata":{},"sourceType":"module"}