{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jaredricardo/Desktop/apps/pixel-sorter/src/components/ConvertedImage.js\";\nimport React, { Component } from 'react'; // import imageToBase64 from 'image-to-base64'\n\nimport dog from './test-images/dog.jpg';\nimport FileBase64 from 'react-file-base64';\nexport class ConvertedImage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      img: dog,\n      data: null\n    };\n  }\n\n  getFiles(data) {\n    let imgString = '';\n    let newImgString = [];\n    this.setState({\n      converted: data\n    });\n    imgString = this.state.converted[0].base64;\n\n    for (let i = 0; i < imgString.length; i++) {\n      if (imgString[i] === 'B') {\n        newImgString.push('A');\n      } else {\n        newImgString.push(imgString[i]);\n      }\n    }\n\n    console.log(newImgString);\n  }\n\n  render() {\n    const img = this.state.img;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.getFiles,\n        children: \" Convert to base 64\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-container\",\n        children: /*#__PURE__*/_jsxDEV(FileBase64, {\n          multiple: true,\n          onDone: this.getFiles.bind(this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nexport default ConvertedImage;","map":{"version":3,"sources":["/Users/jaredricardo/Desktop/apps/pixel-sorter/src/components/ConvertedImage.js"],"names":["React","Component","dog","FileBase64","ConvertedImage","constructor","props","state","img","data","getFiles","imgString","newImgString","setState","converted","base64","i","length","push","console","log","render","bind"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AAEA,OAAO,MAAMC,cAAN,SAA6BH,SAA7B,CAAuC;AAC1CI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,GAAG,EAAEN,GADI;AAETO,MAAAA,IAAI,EAAE;AAFG,KAAb;AAIH;;AAGDC,EAAAA,QAAQ,CAACD,IAAD,EAAM;AACV,QAAIE,SAAS,GAAG,EAAhB;AACA,QAAIC,YAAY,GAAG,EAAnB;AAEA,SAAKC,QAAL,CAAc;AAAEC,MAAAA,SAAS,EAAEL;AAAb,KAAd;AAEAE,IAAAA,SAAS,GAAG,KAAKJ,KAAL,CAAWO,SAAX,CAAqB,CAArB,EAAwBC,MAApC;;AAEA,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAgBA,CAAC,GAAGL,SAAS,CAACM,MAA9B,EAAsCD,CAAC,EAAvC,EAA0C;AACtC,UAAGL,SAAS,CAACK,CAAD,CAAT,KAAiB,GAApB,EAAyB;AACrBJ,QAAAA,YAAY,CAACM,IAAb,CAAkB,GAAlB;AACH,OAFD,MAEO;AACHN,QAAAA,YAAY,CAACM,IAAb,CAAkBP,SAAS,CAACK,CAAD,CAA3B;AACH;AACJ;;AACDG,IAAAA,OAAO,CAACC,GAAR,CAAYR,YAAZ;AACD;;AAEHS,EAAAA,MAAM,GAAG;AACL,UAAMb,GAAG,GAAG,KAAKD,KAAL,CAAWC,GAAvB;AAEA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI;AAAQ,QAAA,OAAO,EAAE,KAAKE,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,+BACI,QAAC,UAAD;AACA,UAAA,QAAQ,EAAG,IADX;AAEA,UAAA,MAAM,EAAG,KAAKA,QAAL,CAAcY,IAAd,CAAmB,IAAnB;AAFT;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAUH;;AA1CyC;AA6C9C,eAAelB,cAAf","sourcesContent":["import React, { Component } from 'react'\n// import imageToBase64 from 'image-to-base64'\nimport dog from './test-images/dog.jpg'\nimport FileBase64 from 'react-file-base64';\n\nexport class ConvertedImage extends Component {\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n            img: dog,\n            data: null,\n        }\n    }\n   \n\n    getFiles(data){\n        let imgString = ''\n        let newImgString = []\n\n        this.setState({ converted: data })\n\n        imgString = this.state.converted[0].base64\n       \n        for(let i = 0 ; i < imgString.length; i++){\n            if(imgString[i] === 'B') {\n                newImgString.push('A')\n            } else {\n                newImgString.push(imgString[i])\n            }\n        }\n        console.log(newImgString)\n      }\n\n    render() {\n        const img = this.state.img\n        \n        return (\n            <div className=\"container\">\n                <button onClick={this.getFiles}> Convert to base 64</button>\n                <div className=\"image-container\"> \n                    <FileBase64 \n                    multiple={ true }\n                    onDone={ this.getFiles.bind(this) } />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ConvertedImage\n"]},"metadata":{},"sourceType":"module"}