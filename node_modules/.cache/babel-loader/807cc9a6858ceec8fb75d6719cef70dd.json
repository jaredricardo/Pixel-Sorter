{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jaredricardo/Desktop/apps/drag drop unused rn/src/components/CanvasApp.js\";\nimport React, { Component } from 'react';\nimport testImage from \"./test-images/150.jpg\";\nexport class CanvasApp extends Component {\n  constructor(props) {\n    super(props);\n\n    this.test = data => {\n      const row = this.state.imageHeight * 4;\n      const col = this.state.imageWidth * 4;\n      let arrArr = [];\n\n      for (let i = 0; i < data.length; i += 4) {\n        let pixel = [data[i], data[i + 1], data[i + 2], data[i + 3]];\n        arrArr.push(pixel);\n      }\n    };\n\n    this.drawNewImage = () => {\n      const canvas = this.refs.canvas;\n      const ctx = canvas.getContext(\"2d\");\n      let copyData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n      ctx.putImageData(copyData, 0, 0);\n      this.test(copyData.data);\n      ctx.putImageData(arrArr, 0, 0);\n    };\n\n    this.state = {\n      imageHeight: null,\n      imageWidth: null\n    };\n  }\n\n  componentDidMount() {\n    const canvas = this.refs.canvas;\n    canvas.height = 200;\n    canvas.width = 200;\n    const ctx = canvas.getContext(\"2d\");\n    const img = this.refs.image;\n\n    img.onload = () => {\n      ctx.drawImage(img, 0, 0);\n    };\n\n    this.setState({\n      imageHeight: canvas.height,\n      imageWidth: canvas.width\n    });\n  }\n\n  render() {\n    const width = this.state.imageWidth;\n    const height = this.state.imageHeight;\n    const hidden = {\n      display: \"none\"\n    };\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.drawNewImage,\n        children: \"test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: \"canvas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          ref: \"image\",\n          src: testImage,\n          style: hidden\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nexport default CanvasApp;","map":{"version":3,"sources":["/Users/jaredricardo/Desktop/apps/drag drop unused rn/src/components/CanvasApp.js"],"names":["React","Component","testImage","CanvasApp","constructor","props","test","data","row","state","imageHeight","col","imageWidth","arrArr","i","length","pixel","push","drawNewImage","canvas","refs","ctx","getContext","copyData","getImageData","width","height","putImageData","componentDidMount","img","image","onload","drawImage","setState","render","hidden","display"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AAEA,OAAO,MAAMC,SAAN,SAAwBF,SAAxB,CAAkC;AACrCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SA0BnBC,IA1BmB,GA0BXC,IAAD,IAAU;AACb,YAAMC,GAAG,GAAG,KAAKC,KAAL,CAAWC,WAAX,GAAyB,CAArC;AACA,YAAMC,GAAG,GAAG,KAAKF,KAAL,CAAWG,UAAX,GAAwB,CAApC;AACA,UAAIC,MAAM,GAAG,EAAb;;AAEA,WAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGP,IAAI,CAACQ,MAAxB,EAAgCD,CAAC,IAAE,CAAnC,EAAsC;AAClC,YAAIE,KAAK,GAAG,CAACT,IAAI,CAACO,CAAD,CAAL,EAASP,IAAI,CAACO,CAAC,GAAG,CAAL,CAAb,EAAqBP,IAAI,CAACO,CAAC,GAAG,CAAL,CAAzB,EAAiCP,IAAI,CAACO,CAAC,GAAG,CAAL,CAArC,CAAZ;AACAD,QAAAA,MAAM,CAACI,IAAP,CAAYD,KAAZ;AAEH;AAEJ,KArCkB;;AAAA,SAwCnBE,YAxCmB,GAwCJ,MAAM;AACjB,YAAMC,MAAM,GAAG,KAAKC,IAAL,CAAUD,MAAzB;AACA,YAAME,GAAG,GAAGF,MAAM,CAACG,UAAP,CAAkB,IAAlB,CAAZ;AACA,UAAIC,QAAQ,GAAGF,GAAG,CAACG,YAAJ,CAAiB,CAAjB,EAAmB,CAAnB,EAAsBL,MAAM,CAACM,KAA7B,EAAoCN,MAAM,CAACO,MAA3C,CAAf;AACAL,MAAAA,GAAG,CAACM,YAAJ,CAAiBJ,QAAjB,EAA2B,CAA3B,EAA8B,CAA9B;AAGA,WAAKjB,IAAL,CAAUiB,QAAQ,CAAChB,IAAnB;AAEAc,MAAAA,GAAG,CAACM,YAAJ,CAAiBd,MAAjB,EAAwB,CAAxB,EAA2B,CAA3B;AACH,KAlDkB;;AAEf,SAAKJ,KAAL,GAAa;AACRC,MAAAA,WAAW,EAAE,IADL;AAERE,MAAAA,UAAU,EAAE;AAFJ,KAAb;AAIH;;AAEDgB,EAAAA,iBAAiB,GAAG;AAChB,UAAMT,MAAM,GAAG,KAAKC,IAAL,CAAUD,MAAzB;AACAA,IAAAA,MAAM,CAACO,MAAP,GAAgB,GAAhB;AACAP,IAAAA,MAAM,CAACM,KAAP,GAAe,GAAf;AACA,UAAMJ,GAAG,GAAGF,MAAM,CAACG,UAAP,CAAkB,IAAlB,CAAZ;AACA,UAAMO,GAAG,GAAG,KAAKT,IAAL,CAAUU,KAAtB;;AAEAD,IAAAA,GAAG,CAACE,MAAJ,GAAa,MAAM;AACfV,MAAAA,GAAG,CAACW,SAAJ,CAAcH,GAAd,EAAmB,CAAnB,EAAsB,CAAtB;AACD,KAFH;;AAGA,SAAKI,QAAL,CAAc;AACVvB,MAAAA,WAAW,EAACS,MAAM,CAACO,MADT;AAEVd,MAAAA,UAAU,EAACO,MAAM,CAACM;AAFR,KAAd;AAID;;AA+BHS,EAAAA,MAAM,GAAG;AACL,UAAMT,KAAK,GAAG,KAAKhB,KAAL,CAAWG,UAAzB;AACA,UAAMc,MAAM,GAAG,KAAKjB,KAAL,CAAWC,WAA1B;AAGA,UAAMyB,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AADE,KAAf;AAIA,wBACI,QAAC,KAAD,CAAO,QAAP;AAAA,8BAMI;AAAQ,QAAA,OAAO,EAAE,KAAKlB,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,eAUI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACI;AAAQ,UAAA,GAAG,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,GAAG,EAAC,OAAT;AAAiB,UAAA,GAAG,EAAEhB,SAAtB;AAAiC,UAAA,KAAK,EAAEiC;AAAxC;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ,eAeI;AAAA;AAAA;AAAA;AAAA,cAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAqBH;;AApFoC;AAuFzC,eAAehC,SAAf","sourcesContent":["import React, { Component } from 'react'\nimport testImage from \"./test-images/150.jpg\"\n\nexport class CanvasApp extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n             imageHeight: null,\n             imageWidth: null\n        }\n    }\n\n    componentDidMount() {\n        const canvas = this.refs.canvas\n        canvas.height = 200\n        canvas.width = 200\n        const ctx = canvas.getContext(\"2d\")\n        const img = this.refs.image\n\n        img.onload = () => {\n            ctx.drawImage(img, 0, 0)\n          }\n        this.setState({\n            imageHeight:canvas.height,\n            imageWidth:canvas.width\n        })  \n      }\n\n   \n\n    test = (data) => {\n        const row = this.state.imageHeight * 4\n        const col = this.state.imageWidth * 4 \n        let arrArr = []\n        \n        for(let i = 0; i < data.length; i+=4) {\n            let pixel = [data[i],data[i + 1],data[i + 2],data[i + 3]]\n            arrArr.push(pixel)\n\n        }\n        \n    }\n\n\n    drawNewImage = () => {\n        const canvas = this.refs.canvas\n        const ctx = canvas.getContext(\"2d\")\n        let copyData = ctx.getImageData(0,0, canvas.width, canvas.height)\n        ctx.putImageData(copyData, 0, 0)\n\n       \n        this.test(copyData.data)\n\n        ctx.putImageData(arrArr,0 ,0 )\n    }\n\n    \n    render() {\n        const width = this.state.imageWidth\n        const height = this.state.imageHeight\n        \n\n        const hidden = {\n            display: \"none\"\n        }\n\n        return (\n            <React.Fragment> \n\n                {/* <div className=\"container\">\n                    <img src={testImage} id=\"img\"style={style}/>\n                </div> */}\n                \n                <button onClick={this.drawNewImage}>\n                    test\n                </button>\n\n                <div className=\"container\">\n                    <canvas ref=\"canvas\"/> \n                    <img ref=\"image\" src={testImage} style={hidden} />\n                </div>\n                \n                <div> \n                    \n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default CanvasApp\n"]},"metadata":{},"sourceType":"module"}