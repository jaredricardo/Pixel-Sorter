{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jaredricardo/Desktop/apps/Pixel-Sorter/src/components/Test.js\";\nimport React, { Component } from 'react';\nimport Spinner from 'react-bootstrap/Spinner';\nexport class Test extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fakeCall = () => {\n      console.log(\"sorting your phat pixels\");\n      this.setState({\n        loading: !this.state.loading\n      }, this.returnToNormal);\n    };\n\n    this.fakeWait = () => {\n      setTimeout(() => {\n        console.log(\"phat pixels have been sorted\");\n        this.setState({\n          loading: false\n        });\n      }, 3000);\n    };\n\n    this.returnToNormal = async () => {\n      await this.fakeWait();\n    };\n\n    this.checkLoading = () => {\n      if (this.state.loading) {\n        return /*#__PURE__*/_jsxDEV(Spinner, {\n          animation: \"border\",\n          size: \"sm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 20\n        }, this);\n      } else {\n        return;\n      }\n    };\n\n    this.testBubble = () => {\n      let uns = [1, 77, 3, 200, 45, 23423, 65, 234, 87, 2, 33, 5, 766, 4, -4, 6, 0, 222, 5];\n      let swapped;\n\n      function bubble(arr) {\n        swapped = false;\n        let end = arr.length - 1;\n\n        for (let i = 0; i < end; i++) {\n          if (arr[i] > arr[i + 1]) {\n            swapped = true;\n            let temp = arr[i];\n            arr[i] = arr[i + 1];\n            arr[i + 1] = temp;\n          }\n        }\n\n        end--;\n      }\n\n      do {\n        bubble(uns);\n      } while (swapped);\n\n      console.log(uns);\n    };\n\n    this.state = {\n      loading: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.testBubble,\n        children: [\"Make something happen\", this.checkLoading()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nexport default Test;","map":{"version":3,"sources":["/Users/jaredricardo/Desktop/apps/Pixel-Sorter/src/components/Test.js"],"names":["React","Component","Spinner","Test","constructor","props","fakeCall","console","log","setState","loading","state","returnToNormal","fakeWait","setTimeout","checkLoading","testBubble","uns","swapped","bubble","arr","end","length","i","temp","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,yBAApB;AAEA,OAAO,MAAMC,IAAN,SAAmBF,SAAnB,CAA6B;AAChCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAQnBC,QARmB,GAQR,MAAM;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACA,WAAKC,QAAL,CAAc;AACVC,QAAAA,OAAO,EAAE,CAAC,KAAKC,KAAL,CAAWD;AADX,OAAd,EAEG,KAAKE,cAFR;AAGH,KAbkB;;AAAA,SAenBC,QAfmB,GAeR,MAAM;AACbC,MAAAA,UAAU,CAAC,MAAM;AACbP,QAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACA,aAAKC,QAAL,CAAc;AACVC,UAAAA,OAAO,EAAE;AADC,SAAd;AAGH,OALS,EAKP,IALO,CAAV;AAMH,KAtBkB;;AAAA,SAwBnBE,cAxBmB,GAwBF,YAAY;AACzB,YAAM,KAAKC,QAAL,EAAN;AACH,KA1BkB;;AAAA,SA4BnBE,YA5BmB,GA4BJ,MAAM;AACjB,UAAG,KAAKJ,KAAL,CAAWD,OAAd,EAAuB;AACnB,4BAAO,QAAC,OAAD;AAAS,UAAA,SAAS,EAAC,QAAnB;AAA4B,UAAA,IAAI,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH,OAFD,MAEO;AACH;AACH;AACJ,KAlCkB;;AAAA,SAoCnBM,UApCmB,GAoCN,MAAM;AACf,UAAIC,GAAG,GAAG,CAAC,CAAD,EAAG,EAAH,EAAM,CAAN,EAAQ,GAAR,EAAY,EAAZ,EAAe,KAAf,EAAqB,EAArB,EAAwB,GAAxB,EAA4B,EAA5B,EAA+B,CAA/B,EAAiC,EAAjC,EAAoC,CAApC,EAAsC,GAAtC,EAA0C,CAA1C,EAA4C,CAAC,CAA7C,EAA+C,CAA/C,EAAiD,CAAjD,EAAmD,GAAnD,EAAuD,CAAvD,CAAV;AACA,UAAIC,OAAJ;;AAEA,eAASC,MAAT,CAAgBC,GAAhB,EAAqB;AACjBF,QAAAA,OAAO,GAAG,KAAV;AACA,YAAIG,GAAG,GAAGD,GAAG,CAACE,MAAJ,GAAa,CAAvB;;AACA,aAAI,IAAIC,CAAC,GAAG,CAAZ,EAAgBA,CAAC,GAAGF,GAApB,EAAyBE,CAAC,EAA1B,EAA8B;AAC1B,cAAGH,GAAG,CAACG,CAAD,CAAH,GAASH,GAAG,CAACG,CAAC,GAAC,CAAH,CAAf,EAAsB;AAClBL,YAAAA,OAAO,GAAG,IAAV;AACA,gBAAIM,IAAI,GAAGJ,GAAG,CAACG,CAAD,CAAd;AACAH,YAAAA,GAAG,CAACG,CAAD,CAAH,GAASH,GAAG,CAACG,CAAC,GAAC,CAAH,CAAZ;AACAH,YAAAA,GAAG,CAACG,CAAC,GAAC,CAAH,CAAH,GAAWC,IAAX;AACH;AACJ;;AACDH,QAAAA,GAAG;AACN;;AACD,SAAG;AAACF,QAAAA,MAAM,CAACF,GAAD,CAAN;AAAY,OAAhB,QAAwBC,OAAxB;;AACAX,MAAAA,OAAO,CAACC,GAAR,CAAYS,GAAZ;AACH,KAvDkB;;AAGf,SAAKN,KAAL,GAAa;AACRD,MAAAA,OAAO,EAAE;AADD,KAAb;AAGH;;AAoDDe,EAAAA,MAAM,GAAG;AAEL,wBACI;AAAA,6BACI;AAAQ,QAAA,OAAO,EAAE,KAAKT,UAAtB;AAAA,4CAGK,KAAKD,YAAL,EAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AASH;;AAtE+B;AAyEpC,eAAeZ,IAAf","sourcesContent":["import React, { Component } from 'react'\nimport Spinner from 'react-bootstrap/Spinner';\n\nexport class Test extends Component {\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n             loading: false\n        }\n    }\n\n    fakeCall = () => {\n        console.log(\"sorting your phat pixels\")\n        this.setState({\n            loading: !this.state.loading\n        }, this.returnToNormal)\n    }\n\n    fakeWait = () => {\n        setTimeout(() => {\n            console.log(\"phat pixels have been sorted\")\n            this.setState({\n                loading: false\n            })\n        }, 3000)\n    }\n\n    returnToNormal = async () => {\n        await this.fakeWait()\n    }\n\n    checkLoading = () => {\n        if(this.state.loading) {\n            return <Spinner animation=\"border\" size=\"sm\"/>\n        } else {\n            return \n        }\n    }\n\n    testBubble = () => {\n        let uns = [1,77,3,200,45,23423,65,234,87,2,33,5,766,4,-4,6,0,222,5]\n        let swapped;\n\n        function bubble(arr) {\n            swapped = false\n            let end = arr.length - 1\n            for(let i = 0 ; i < end; i++) {\n                if(arr[i] > arr[i+1]) {\n                    swapped = true\n                    let temp = arr[i]\n                    arr[i] = arr[i+1]\n                    arr[i+1] = temp\n                }\n            }\n            end--\n        } \n        do {bubble(uns)} while (swapped)\n        console.log(uns)\n    }\n    \n    \n    render() {\n\n        return (\n            <div>\n                <button onClick={this.testBubble}> \n                \n                    Make something happen \n                    {this.checkLoading()}\n                </button>\n            </div>\n        )\n    }\n}\n\nexport default Test\n"]},"metadata":{},"sourceType":"module"}