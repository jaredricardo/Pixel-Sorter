{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jaredricardo/Desktop/apps/Pixel-Sorter/src/components/DragDropPreview.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, Fragment } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport '../App.css';\n\nfunction DragDropPreview(props) {\n  _s();\n\n  const [files, setFiles] = useState([]);\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    accept: 'image/*',\n    onDrop: acceptedFiles => {\n      setFiles(acceptedFiles.map(file => Object.assign(file, {\n        preview: URL.createObjectURL(file)\n      })));\n    }\n  });\n  const imagePreview = files.map(file => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropped-image\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: file.preview\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: file.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: file.path\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: file.preview\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, file.name, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this));\n\n  const image = /*#__PURE__*/_jsxDEV(\"img\", {\n    src: file.preview\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 17\n  }, this);\n\n  useEffect(() => () => {\n    // Make sure to revoke the data uris to avoid memory leaks\n    files.forEach(file => URL.revokeObjectURL(file.preview));\n  }, [files]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", { ...getRootProps({\n            className: 'dropzone drop-area'\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \" Drag and drop a photo or click to select files\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-container\",\n      children: imagePreview\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DragDropPreview, \"HtUHmGo3hwDZKSmIKg3riAANKQ4=\", false, function () {\n  return [useDropzone];\n});\n\n_c = DragDropPreview;\nexport default DragDropPreview;\n\nvar _c;\n\n$RefreshReg$(_c, \"DragDropPreview\");","map":{"version":3,"sources":["/Users/jaredricardo/Desktop/apps/Pixel-Sorter/src/components/DragDropPreview.js"],"names":["React","useEffect","useState","Fragment","useDropzone","DragDropPreview","props","files","setFiles","getRootProps","getInputProps","accept","onDrop","acceptedFiles","map","file","Object","assign","preview","URL","createObjectURL","imagePreview","name","path","image","forEach","revokeObjectURL","className"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,EAAoCC,QAApC,QAAmD,OAAnD;AACA,SAAQC,WAAR,QAA0B,gBAA1B;AACA,OAAO,YAAP;;AAGA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAAA;;AAC9B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAACO,IAAAA,YAAD;AAAeC,IAAAA;AAAf,MAAgCN,WAAW,CAAC;AAChDO,IAAAA,MAAM,EAAE,SADwC;AAEhDC,IAAAA,MAAM,EAAEC,aAAa,IAAI;AACvBL,MAAAA,QAAQ,CAACK,aAAa,CAACC,GAAd,CAAkBC,IAAI,IAAIC,MAAM,CAACC,MAAP,CAAcF,IAAd,EAAoB;AACrDG,QAAAA,OAAO,EAAEC,GAAG,CAACC,eAAJ,CAAoBL,IAApB;AAD4C,OAApB,CAA1B,CAAD,CAAR;AAGD;AAN+C,GAAD,CAAjD;AASA,QAAMM,YAAY,GAAGd,KAAK,CAACO,GAAN,CAAUC,IAAI,iBACjC;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACE;AACE,QAAA,GAAG,EAAEA,IAAI,CAACG;AADZ;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAA,kBAAIH,IAAI,CAACO;AAAT;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAA,kBAAIP,IAAI,CAACQ;AAAT;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAA,kBAAIR,IAAI,CAACG;AAAT;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,KAAUH,IAAI,CAACO,IAAf;AAAA;AAAA;AAAA;AAAA,UADmB,CAArB;;AAaA,QAAME,KAAK,gBAAG;AAAK,IAAA,GAAG,EAAET,IAAI,CAACG;AAAf;AAAA;AAAA;AAAA;AAAA,UAAd;;AAGAjB,EAAAA,SAAS,CAAC,MAAM,MAAM;AACpB;AACAM,IAAAA,KAAK,CAACkB,OAAN,CAAcV,IAAI,IAAII,GAAG,CAACO,eAAJ,CAAoBX,IAAI,CAACG,OAAzB,CAAtB;AACD,GAHQ,EAGN,CAACX,KAAD,CAHM,CAAT;AAKA,sBACE;AAAA,4BACI;AAAA,6BACI;AAAS,QAAA,SAAS,EAAC,WAAnB;AAAA,+BACA,oBAASE,YAAY,CAAC;AAACkB,YAAAA,SAAS,EAAE;AAAZ,WAAD,CAArB;AAAA,kCACI,sBAAWjB,aAAa;AAAxB;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAUI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,gBACKW;AADL;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;GAlDQhB,e;UAE+BD,W;;;KAF/BC,e;AAoDT,eAAeA,eAAf","sourcesContent":["import React, {useEffect, useState, Fragment} from 'react';\nimport {useDropzone} from 'react-dropzone';\nimport '../App.css'\n\n\nfunction DragDropPreview(props) {\n  const [files, setFiles] = useState([]);\n  const {getRootProps, getInputProps} = useDropzone({\n    accept: 'image/*',\n    onDrop: acceptedFiles => {\n      setFiles(acceptedFiles.map(file => Object.assign(file, {\n        preview: URL.createObjectURL(file)\n      })));\n    }\n  });\n  \n  const imagePreview = files.map(file => (\n    <div key={file.name}>\n      <div className=\"dropped-image\">\n        <img\n          src={file.preview}\n        />\n        <p>{file.name}</p>\n        <p>{file.path}</p>\n        <p>{file.preview}</p>\n      </div>\n    </div>\n  ));\n\n  const image = <img src={file.preview} />\n\n\n  useEffect(() => () => {\n    // Make sure to revoke the data uris to avoid memory leaks\n    files.forEach(file => URL.revokeObjectURL(file.preview));\n  }, [files]);\n\n  return (\n    <div> \n        <div>\n            <section className=\"container\">\n            <div {...getRootProps({className: 'dropzone drop-area'})}>\n                <input {...getInputProps()} />\n                <p> Drag and drop a photo or click to select files</p>\n            </div>\n            </section>\n        </div>\n \n        <div className=\"image-container\">\n            {imagePreview}\n        </div>\n\n    </div>\n\n  );\n}\n\nexport default DragDropPreview"]},"metadata":{},"sourceType":"module"}