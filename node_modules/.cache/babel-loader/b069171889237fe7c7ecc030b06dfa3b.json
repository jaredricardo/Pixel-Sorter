{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jaredricardo/Desktop/apps/Pixel-Sorter/src/components/CanvasApp.js\";\nimport React, { Component } from 'react';\nimport { test, nativeSort_COL2x, nativeSort_COL, bubbleSort, nativeSort } from \"./functions\";\nimport Spinner from 'react-bootstrap/Spinner';\nimport { Row, Col, Container, Dropdown, DropdownButton } from \"react-bootstrap\";\nimport { identifier, isMemberExpression } from '@babel/types';\nimport { func } from 'prop-types';\nexport class CanvasApp extends Component {\n  constructor(props) {\n    super(props);\n\n    this.sortThePixels = () => {\n      if (!this.state.imageSelected) return alert(\"please load an image\");\n      const algo = this.state.currentSort;\n      const canvas = this.canvasRef1.current;\n      const ctx = canvas.getContext(\"2d\");\n      let copyData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n\n      if (algo === 'test') {\n        copyData = test(copyData.data, this.state.imageHeight, this.state.imageWidth);\n      }\n\n      if (algo === 'nativeSort_COL_2x') {\n        copyData = nativeSort_COL2x(copyData.data, this.state.imageHeight, this.state.imageWidth);\n      }\n\n      if (algo === 'nativeSort_COL') {\n        copyData = nativeSort_COL(copyData.data, this.state.imageHeight, this.state.imageWidth);\n      }\n\n      if (algo === 'bubbleSort') {\n        copyData = bubbleSort(copyData.data, this.state.imageHeight, this.state.imageWidth);\n      }\n\n      if (algo === 'nativeSort') {\n        copyData = nativeSort(copyData.data, this.state.imageHeight, this.state.imageWidth);\n      }\n\n      ctx.putImageData(copyData, 0, 0);\n    };\n\n    this.setSortOption = e => {\n      this.setState({\n        currentSort: e.target.value\n      });\n    };\n\n    this.imageLoadHandler = e => {\n      if (e.target.files[0].size > 104857600) return alert(\"File size exceeds 100MB\");\n      const canvas = this.canvasRef1.current;\n      const ctx = canvas.getContext(\"2d\");\n      const canvas2 = this.canvasRef2.current;\n      const ctx2 = canvas.getContext(\"2d\");\n      const reader = new FileReader();\n      const img = new Image();\n\n      reader.onload = secondEvent => {\n        img.onload = () => {\n          const fileSize = bytes => {\n            const mb = (bytes / 1000000).toFixed(1) + 'MB';\n            const kb = (bytes / 1000).toFixed(1) + \"KB\";\n            const digits = bytes.toString().length;\n            return digits >= 7 ? mb : kb;\n          };\n\n          canvas.width = img.width;\n          canvas.height = img.height;\n          canvas2.width = img.width;\n          canvas2.height = img.height;\n          ctx.drawImage(img, 0, 0);\n          ctx2.drawImage(img, 0, 0);\n          this.setState({\n            currentImageSrc: \"Place Holder\",\n            //img.src ?\n            imageFileSize: fileSize(e.target.files[0].size),\n            imageHeight: img.height,\n            imageWidth: img.width,\n            imageSelected: true\n          });\n        };\n\n        img.src = secondEvent.target.result;\n      };\n\n      reader.readAsDataURL(e.target.files[0]);\n    };\n\n    this.resetImage = () => {};\n\n    this.imageRef = /*#__PURE__*/React.createRef();\n    this.canvasRef1 = /*#__PURE__*/React.createRef();\n    this.canvasRef2 = /*#__PURE__*/React.createRef();\n    this.state = {\n      currentImageSrc: null,\n      imageFileSize: null,\n      imageHeight: null,\n      imageWidth: null,\n      imageSelected: false,\n      // imageLoading: false, \n      currentSort: 'test'\n    };\n  } // drawNewImage = () => {\n  //     this.setState({\n  //         imageLoading: true\n  //     }, this.resetLoading)\n  // }\n\n\n  render() {\n    // const hiddenStyle = {\n    //     display: \"none\"\n    // }\n    const maxStyle = {\n      maxHeight: \"700px\",\n      width: \"auto\"\n    };\n    return /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      className: \"align-items-center \",\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        className: \"justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \"image/*\",\n            ref: this.uploadedRef,\n            onChange: this.imageLoadHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"options\",\n            id: \"sort-options\",\n            onChange: this.setSortOption,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"test\",\n              children: \"Test\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"nativeSort_COL_2x\",\n              children: \"Columned Native Sort x 2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"nativeSort_COL\",\n              children: \"Columned Native Sort\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"bubbleSort\",\n              children: \"Bubble Sort\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"nativeSort\",\n              children: \"Native Sort\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.sortThePixels,\n            children: \"Sort image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.resetImage,\n            children: \"Reset image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"justify-content-center\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n            ref: this.canvasRef1,\n            style: maxStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n            ref: this.canvasRef2,\n            style: maxStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nexport default CanvasApp;","map":{"version":3,"sources":["/Users/jaredricardo/Desktop/apps/Pixel-Sorter/src/components/CanvasApp.js"],"names":["React","Component","test","nativeSort_COL2x","nativeSort_COL","bubbleSort","nativeSort","Spinner","Row","Col","Container","Dropdown","DropdownButton","identifier","isMemberExpression","func","CanvasApp","constructor","props","sortThePixels","state","imageSelected","alert","algo","currentSort","canvas","canvasRef1","current","ctx","getContext","copyData","getImageData","width","height","data","imageHeight","imageWidth","putImageData","setSortOption","e","setState","target","value","imageLoadHandler","files","size","canvas2","canvasRef2","ctx2","reader","FileReader","img","Image","onload","secondEvent","fileSize","bytes","mb","toFixed","kb","digits","toString","length","drawImage","currentImageSrc","imageFileSize","src","result","readAsDataURL","resetImage","imageRef","createRef","render","maxStyle","maxHeight","uploadedRef"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { test, nativeSort_COL2x, nativeSort_COL, bubbleSort, nativeSort } from \"./functions\"\nimport Spinner from 'react-bootstrap/Spinner';\nimport { Row, Col, Container, Dropdown, DropdownButton } from \"react-bootstrap\"\nimport { identifier, isMemberExpression } from '@babel/types'\nimport { func } from 'prop-types';\n\n\nexport class CanvasApp extends Component {\n    constructor(props) {\n        super(props)\n        this.imageRef = React.createRef()\n        this.canvasRef1 = React.createRef()\n        this.canvasRef2 = React.createRef()\n        this.state = {\n            currentImageSrc: null,\n            imageFileSize: null,\n            imageHeight: null,\n            imageWidth: null,\n            imageSelected: false,\n            // imageLoading: false, \n            currentSort: 'test'\n        }\n    }\n\n      \n    // drawNewImage = () => {\n    //     this.setState({\n    //         imageLoading: true\n    //     }, this.resetLoading)\n    // }\n\n    sortThePixels = () => {\n\n        if(!this.state.imageSelected) return alert(\"please load an image\")\n\n        const algo = this.state.currentSort\n        const canvas = this.canvasRef1.current\n        const ctx = canvas.getContext(\"2d\")\n        let copyData = ctx.getImageData(0,0, canvas.width, canvas.height)\n\n\n        if(algo === 'test') {\n            copyData = test(copyData.data, this.state.imageHeight, this.state.imageWidth)\n        } \n        if(algo === 'nativeSort_COL_2x') {\n            copyData = nativeSort_COL2x(copyData.data, this.state.imageHeight, this.state.imageWidth)\n        } \n        if(algo === 'nativeSort_COL') {\n            copyData = nativeSort_COL(copyData.data, this.state.imageHeight, this.state.imageWidth)\n        } \n        if(algo === 'bubbleSort') {\n            copyData = bubbleSort(copyData.data, this.state.imageHeight, this.state.imageWidth)\n        } \n        if(algo === 'nativeSort') {\n            copyData = nativeSort(copyData.data, this.state.imageHeight, this.state.imageWidth)\n        } \n        ctx.putImageData(copyData,0 ,0)\n    }\n\n\n    setSortOption = (e) => {\n        this.setState({\n            currentSort: e.target.value\n        })\n    }\n\n    imageLoadHandler = (e) => {\n\n        if(e.target.files[0].size > 104857600) return alert(\"File size exceeds 100MB\") \n\n        const canvas = this.canvasRef1.current\n        const ctx = canvas.getContext(\"2d\")\n        const canvas2 = this.canvasRef2.current\n        const ctx2 = canvas.getContext(\"2d\")\n        const reader = new FileReader()\n        const img = new Image()\n\n        reader.onload = (secondEvent) => {\n           \n            img.onload = () => {\n\n                const fileSize = (bytes) => {\n                    const mb = (bytes / 1000000).toFixed(1) + 'MB'\n                    const kb = (bytes / 1000).toFixed(1) + \"KB\"\n                    const digits = bytes.toString().length \n                    return digits >= 7 ? mb : kb \n                }\n\n                canvas.width = img.width\n                canvas.height = img.height\n                canvas2.width = img.width\n                canvas2.height = img.height\n                ctx.drawImage(img,0,0)\n                ctx2.drawImage(img,0,0)\n                \n               \n                \n                this.setState({\n                        currentImageSrc: \"Place Holder\",//img.src ?\n                        imageFileSize: fileSize(e.target.files[0].size),\n                        imageHeight: img.height,\n                        imageWidth: img.width,\n                        imageSelected: true\n                    })\n                }\n            img.src = secondEvent.target.result;\n        }\n    \n        reader.readAsDataURL(e.target.files[0])\n    }\n\n    resetImage = () => {\n\n    }\n\n\n    render() {\n\n        // const hiddenStyle = {\n        //     display: \"none\"\n        // }\n        \n        const maxStyle = {\n            maxHeight: \"700px\",\n            width: \"auto\" \n        }\n\n        return (\n            <Container fluid className=\"align-items-center \"> \n                <Row className=\"justify-content-center\"> \n                    <div>\n                            <input type=\"file\" accept=\"image/*\" ref={this.uploadedRef} onChange={this.imageLoadHandler} />\n                        \n                        <select name=\"options\" id=\"sort-options\" onChange={this.setSortOption}>\n                            <option value=\"test\">Test</option>\n                            <option value=\"nativeSort_COL_2x\">Columned Native Sort x 2</option>\n                            <option value=\"nativeSort_COL\">Columned Native Sort</option>\n                            <option value=\"bubbleSort\">Bubble Sort</option>\n                            <option value=\"nativeSort\">Native Sort</option>\n                        </select>\n\n                        <button onClick={this.sortThePixels}>\n                            Sort image\n                            {/* {this.checkLoading()} */}\n                        </button>\n\n                        <button onClick={this.resetImage}>\n                            Reset image\n                        </button>\n                    </div>\n                </Row>\n\n                <Row className=\"justify-content-center\">\n\n                    <Col >\n                        <canvas ref={this.canvasRef1} style={maxStyle}/>\n                    </Col>\n\n                    <Col>\n                        <canvas ref={this.canvasRef2} style={maxStyle}/>\n                    </Col>\n\n                    \n                </Row>           \n            </Container>\n        )\n    }\n}\n\n\nexport default CanvasApp\n"]},"metadata":{},"sourceType":"module"}