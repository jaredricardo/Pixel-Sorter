{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jaredricardo/Desktop/apps/pixel-sorter/src/components/DragDrop.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, Fragment } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport ConvertedImage from './ConvertedImage';\n\nfunction DragDrop(props) {\n  _s();\n\n  const [files, setFiles] = useState([]);\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    accept: 'image/*',\n    onDrop: acceptedFiles => {\n      setFiles(acceptedFiles.map(file => Object.assign(file, {\n        preview: URL.createObjectURL(file)\n      })));\n    }\n  });\n  const imagePreview = files.map(file => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropped-image\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: file.preview\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, file.name, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this));\n  const convertImage = files.map(converted => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: converted.preview\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 10\n    }, this)\n  }, converted.name, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 6\n  }, this));\n  useEffect(() => () => {\n    // Make sure to revoke the data uris to avoid memory leaks\n    files.forEach(file => URL.revokeObjectURL(file.preview));\n  }, [files]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", { ...getRootProps({\n            className: 'dropzone drop-area'\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \" Drag and drop a photo or click to select files\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \" algorithm 1 \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \" algorithm 2 \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: convertImage,\n      children: \"Send it\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: imagePreview\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DragDrop, \"HtUHmGo3hwDZKSmIKg3riAANKQ4=\", false, function () {\n  return [useDropzone];\n});\n\n_c = DragDrop;\nexport default DragDrop;\n\nvar _c;\n\n$RefreshReg$(_c, \"DragDrop\");","map":{"version":3,"sources":["/Users/jaredricardo/Desktop/apps/pixel-sorter/src/components/DragDrop.js"],"names":["React","useEffect","useState","Fragment","useDropzone","ConvertedImage","DragDrop","props","files","setFiles","getRootProps","getInputProps","accept","onDrop","acceptedFiles","map","file","Object","assign","preview","URL","createObjectURL","imagePreview","name","convertImage","converted","forEach","revokeObjectURL","className"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,EAAoCC,QAApC,QAAmD,OAAnD;AACA,SAAQC,WAAR,QAA0B,gBAA1B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAIA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACvB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAACQ,IAAAA,YAAD;AAAeC,IAAAA;AAAf,MAAgCP,WAAW,CAAC;AAChDQ,IAAAA,MAAM,EAAE,SADwC;AAEhDC,IAAAA,MAAM,EAAEC,aAAa,IAAI;AACvBL,MAAAA,QAAQ,CAACK,aAAa,CAACC,GAAd,CAAkBC,IAAI,IAAIC,MAAM,CAACC,MAAP,CAAcF,IAAd,EAAoB;AACrDG,QAAAA,OAAO,EAAEC,GAAG,CAACC,eAAJ,CAAoBL,IAApB;AAD4C,OAApB,CAA1B,CAAD,CAAR;AAGD;AAN+C,GAAD,CAAjD;AASA,QAAMM,YAAY,GAAGd,KAAK,CAACO,GAAN,CAAUC,IAAI,iBACjC;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,6BACE;AACE,QAAA,GAAG,EAAEA,IAAI,CAACG;AADZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,KAAUH,IAAI,CAACO,IAAf;AAAA;AAAA;AAAA;AAAA,UADmB,CAArB;AAYD,QAAMC,YAAY,GAAGhB,KAAK,CAACO,GAAN,CAAUU,SAAS,iBACpC;AAAA,2BACI;AAAK,MAAA,GAAG,EAAEA,SAAS,CAACN;AAApB;AAAA;AAAA;AAAA;AAAA;AADJ,KAAUM,SAAS,CAACF,IAApB;AAAA;AAAA;AAAA;AAAA,UADiB,CAArB;AASCtB,EAAAA,SAAS,CAAC,MAAM,MAAM;AACpB;AACAO,IAAAA,KAAK,CAACkB,OAAN,CAAcV,IAAI,IAAII,GAAG,CAACO,eAAJ,CAAoBX,IAAI,CAACG,OAAzB,CAAtB;AACD,GAHQ,EAGN,CAACX,KAAD,CAHM,CAAT;AAKA,sBACE,QAAC,QAAD;AAAA,4BACI;AAAA,6BACI;AAAS,QAAA,SAAS,EAAC,WAAnB;AAAA,+BACA,oBAASE,YAAY,CAAC;AAACkB,YAAAA,SAAS,EAAE;AAAZ,WAAD,CAArB;AAAA,kCACI,sBAAWjB,aAAa;AAAxB;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAWA;AAAA,6BACI;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAXA,eAkBI;AAAQ,MAAA,OAAO,EAAEa,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBJ,eAoBI;AAAA,gBACCF;AADD;AAAA;AAAA;AAAA;AAAA,YApBJ,eAwBI;AAAA;AAAA;AAAA;AAAA,YAxBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD;;GApEQhB,Q;UAE+BF,W;;;KAF/BE,Q;AAsET,eAAeA,QAAf","sourcesContent":["import React, {useEffect, useState, Fragment} from 'react';\nimport {useDropzone} from 'react-dropzone';\nimport ConvertedImage from './ConvertedImage';\n\n\n\nfunction DragDrop(props) {\n  const [files, setFiles] = useState([]);\n  const {getRootProps, getInputProps} = useDropzone({\n    accept: 'image/*',\n    onDrop: acceptedFiles => {\n      setFiles(acceptedFiles.map(file => Object.assign(file, {\n        preview: URL.createObjectURL(file)\n      })));\n    }\n  });\n  \n  const imagePreview = files.map(file => (\n    <div key={file.name}>\n      <div className=\"dropped-image\">\n        <img\n          src={file.preview}\n        />\n        \n      </div>\n    </div>\n  ));\n\n\n const convertImage = files.map(converted =>(\n     <div key={converted.name}>\n         <img src={converted.preview} />\n     </div>\n ))\n    \n\n \n\n  useEffect(() => () => {\n    // Make sure to revoke the data uris to avoid memory leaks\n    files.forEach(file => URL.revokeObjectURL(file.preview));\n  }, [files]);\n\n  return (\n    <Fragment> \n        <div>\n            <section className=\"container\">\n            <div {...getRootProps({className: 'dropzone drop-area'})}>\n                <input {...getInputProps()} />\n                <p> Drag and drop a photo or click to select files</p>\n            </div>\n            </section>\n        </div>\n \n\n    <div>\n        <select>\n            <option> algorithm 1 </option>\n            <option> algorithm 2 </option>\n        </select>\n    </div>\n\n        <button onClick={convertImage}>Send it</button>\n\n        <div>\n        {imagePreview}\n        </div>\n\n        <div>\n            {/* {imageConverted} */}\n        </div>\n    </Fragment>\n\n  );\n}\n\nexport default DragDrop"]},"metadata":{},"sourceType":"module"}