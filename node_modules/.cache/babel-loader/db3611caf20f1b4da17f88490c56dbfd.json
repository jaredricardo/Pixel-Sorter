{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jaredricardo/Desktop/apps/Pixel-Sorter/src/components/CanvasApp.js\";\nimport React, { Component } from 'react';\nimport testImage from \"./test-images/300x200.jpg\";\nimport { test, nativeSort_COL2x, nativeSort_COL, bubbleSort, nativeSort } from \"./functions\";\nimport Spinner from 'react-bootstrap/Spinner';\nimport { Row, Col, Container, Dropdown, DropdownButton } from \"react-bootstrap\";\nimport { identifier, isMemberExpression } from '@babel/types';\nimport { func } from 'prop-types';\nexport class CanvasApp extends Component {\n  constructor(props) {\n    super(props);\n\n    this.sortThePixels = () => {\n      if (!this.state.imageSelected) return alert(\"please load an image\");\n      const algo = this.state.currentSort;\n      const canvas = this.canvasRef.current;\n      const ctx = canvas.getContext(\"2d\");\n      let copyData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n\n      if (algo === 'test') {\n        copyData = test(copyData.data, this.state.imageHeight, this.state.imageWidth);\n      }\n\n      if (algo === 'nativeSort_COL_2x') {\n        copyData = nativeSort_COL2x(copyData.data, this.state.imageHeight, this.state.imageWidth);\n      }\n\n      if (algo === 'nativeSort_COL') {\n        copyData = nativeSort_COL(copyData.data, this.state.imageHeight, this.state.imageWidth);\n      }\n\n      if (algo === 'bubbleSort') {\n        copyData = bubbleSort(copyData.data, this.state.imageHeight, this.state.imageWidth);\n      }\n\n      if (algo === 'nativeSort') {\n        copyData = nativeSort(copyData.data, this.state.imageHeight, this.state.imageWidth);\n      }\n\n      ctx.putImageData(copyData, 0, 0);\n    };\n\n    this.setSortOption = e => {\n      this.setState({\n        currentSort: e.target.value\n      });\n    };\n\n    this.imageLoadHandler = e => {\n      const canvas = this.canvasRef.current;\n      const ctx = canvas.getContext(\"2d\");\n      const reader = new FileReader();\n      const img = new Image();\n\n      reader.onload = secondEvent => {\n        img.onload = () => {\n          const fileSize = bytes => {\n            console.log(bytes);\n            const mb = bytes / 1000000;\n            const kb = bytes / 1000;\n            console.log(mb, kb);\n            return bytes >= 7 ? mb.toFixed(1) + \"MB\" : kb.toFixed(1) + \"KB\";\n          };\n\n          canvas.width = img.width;\n          canvas.height = img.height;\n          ctx.drawImage(img, 0, 0);\n          this.setState({\n            currentImageSrc: img.src,\n            imageFileSize: fileSize(e.target.files[0].size),\n            imageHeight: img.height,\n            imageWidth: img.width,\n            imageSelected: true\n          });\n        };\n\n        img.src = secondEvent.target.result;\n      };\n\n      reader.readAsDataURL(e.target.files[0]);\n    };\n\n    this.resetImage = () => {};\n\n    this.imageRef = /*#__PURE__*/React.createRef();\n    this.canvasRef = /*#__PURE__*/React.createRef();\n    this.state = {\n      currentImageSrc: null,\n      imageFileSize: null,\n      imageHeight: null,\n      imageWidth: null,\n      imageSelected: false,\n      // imageLoading: false, \n      currentSort: 'test'\n    };\n  } // drawNewImage = () => {\n  //     this.setState({\n  //         imageLoading: true\n  //     }, this.resetLoading)\n  // }\n\n\n  render() {\n    // const hiddenStyle = {\n    //     display: \"none\"\n    // }\n    const maxStyle = {\n      maxHeight: \"700px\",\n      width: \"auto\"\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        ref: this.uploadedRef,\n        onChange: this.imageLoadHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"options\",\n        id: \"sort-options\",\n        onChange: this.setSortOption,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"test\",\n          children: \"Test\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"nativeSort_COL_2x\",\n          children: \"Columned Native Sort x 2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"nativeSort_COL\",\n          children: \"Columned Native Sort\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"bubbleSort\",\n          children: \"Bubble Sort\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"nativeSort\",\n          children: \"Native Sort\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.sortThePixels,\n        children: \"Sort image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.resetImage,\n        children: \"Reset image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: this.canvasRef,\n          style: maxStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nexport default CanvasApp;","map":{"version":3,"sources":["/Users/jaredricardo/Desktop/apps/Pixel-Sorter/src/components/CanvasApp.js"],"names":["React","Component","testImage","test","nativeSort_COL2x","nativeSort_COL","bubbleSort","nativeSort","Spinner","Row","Col","Container","Dropdown","DropdownButton","identifier","isMemberExpression","func","CanvasApp","constructor","props","sortThePixels","state","imageSelected","alert","algo","currentSort","canvas","canvasRef","current","ctx","getContext","copyData","getImageData","width","height","data","imageHeight","imageWidth","putImageData","setSortOption","e","setState","target","value","imageLoadHandler","reader","FileReader","img","Image","onload","secondEvent","fileSize","bytes","console","log","mb","kb","toFixed","drawImage","currentImageSrc","src","imageFileSize","files","size","result","readAsDataURL","resetImage","imageRef","createRef","render","maxStyle","maxHeight","uploadedRef"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport testImage from \"./test-images/300x200.jpg\"\nimport { test, nativeSort_COL2x, nativeSort_COL, bubbleSort, nativeSort } from \"./functions\"\nimport Spinner from 'react-bootstrap/Spinner';\nimport { Row, Col, Container, Dropdown, DropdownButton } from \"react-bootstrap\"\nimport { identifier, isMemberExpression } from '@babel/types'\nimport { func } from 'prop-types';\n\n\nexport class CanvasApp extends Component {\n    constructor(props) {\n        super(props)\n        this.imageRef = React.createRef()\n        this.canvasRef = React.createRef()\n        this.state = {\n            currentImageSrc: null,\n            imageFileSize: null,\n            imageHeight: null,\n            imageWidth: null,\n            imageSelected: false,\n            // imageLoading: false, \n            currentSort: 'test'\n        }\n    }\n\n\n      \n    // drawNewImage = () => {\n    //     this.setState({\n    //         imageLoading: true\n    //     }, this.resetLoading)\n    // }\n\n    sortThePixels = () => {\n        if(!this.state.imageSelected) return alert(\"please load an image\")\n        const algo = this.state.currentSort\n        const canvas = this.canvasRef.current\n        const ctx = canvas.getContext(\"2d\")\n        let copyData = ctx.getImageData(0,0, canvas.width, canvas.height)\n\n\n        if(algo === 'test') {\n            copyData = test(copyData.data, this.state.imageHeight, this.state.imageWidth)\n        } \n        if(algo === 'nativeSort_COL_2x') {\n            copyData = nativeSort_COL2x(copyData.data, this.state.imageHeight, this.state.imageWidth)\n        } \n        if(algo === 'nativeSort_COL') {\n            copyData = nativeSort_COL(copyData.data, this.state.imageHeight, this.state.imageWidth)\n        } \n        if(algo === 'bubbleSort') {\n            copyData = bubbleSort(copyData.data, this.state.imageHeight, this.state.imageWidth)\n        } \n        if(algo === 'nativeSort') {\n            copyData = nativeSort(copyData.data, this.state.imageHeight, this.state.imageWidth)\n        } \n        ctx.putImageData(copyData,0 ,0)\n    }\n\n\n    setSortOption = (e) => {\n        this.setState({\n            currentSort: e.target.value\n        })\n    }\n\n    imageLoadHandler = (e) => {\n        const canvas = this.canvasRef.current\n        const ctx = canvas.getContext(\"2d\")\n        const reader = new FileReader()\n        const img = new Image()\n\n        reader.onload = (secondEvent) => {\n           \n            img.onload = () => {\n\n                const fileSize = (bytes) => {\n                    console.log(bytes)\n                    const mb = bytes / 1000000\n                    const kb = bytes / 1000\n                    console.log(mb, kb)\n                    return bytes >= 7 ? mb.toFixed(1) + \"MB\" : kb.toFixed(1) + \"KB\" \n                }\n\n                canvas.width = img.width;\n                canvas.height = img.height;\n                ctx.drawImage(img,0,0);\n               \n                \n                this.setState({\n                        currentImageSrc: img.src,\n                        imageFileSize: fileSize(e.target.files[0].size),\n                        imageHeight: img.height,\n                        imageWidth: img.width,\n                        imageSelected: true\n                    })\n                }\n            img.src = secondEvent.target.result;\n        }\n    \n        reader.readAsDataURL(e.target.files[0]); \n\n    }\n\n    resetImage = () => {\n\n    }\n\n    render() {\n\n        // const hiddenStyle = {\n        //     display: \"none\"\n        // }\n        \n        const maxStyle = {\n            maxHeight: \"700px\",\n            width: \"auto\" \n        }\n\n        return (\n\n            <div> \n                \n                <input type=\"file\" accept=\"image/*\" ref={this.uploadedRef} onChange={this.imageLoadHandler} />\n                \n\n                <select name=\"options\" id=\"sort-options\" onChange={this.setSortOption}>\n                    <option value=\"test\">Test</option>\n                    <option value=\"nativeSort_COL_2x\">Columned Native Sort x 2</option>\n                    <option value=\"nativeSort_COL\">Columned Native Sort</option>\n                    <option value=\"bubbleSort\">Bubble Sort</option>\n                    <option value=\"nativeSort\">Native Sort</option>\n                </select>\n\n                <button onClick={this.sortThePixels}>\n                    Sort image\n                    {/* {this.checkLoading()} */}\n                </button>\n\n                <button onClick={this.resetImage}>\n                    Reset image\n                </button>\n\n                \n                <div className=\"container\" >\n\n                    {/* <img ref={this.imageRef} src={testImage} />  */}\n\n                        <canvas ref={this.canvasRef} style={maxStyle}/>  \n\n                </div>\n                \n           \n            </div>\n        )\n    }\n}\n\n\nexport default CanvasApp\n"]},"metadata":{},"sourceType":"module"}