{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jaredricardo/Desktop/apps/pixel-sorter/src/components/DragDrop.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nconst img = {\n  display: 'block',\n  width: 'auto',\n  height: '100%'\n};\n\nfunction DragDrop(props) {\n  _s();\n\n  const [files, setFiles] = useState([]);\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    accept: 'image/*',\n    onDrop: acceptedFiles => {\n      setFiles(acceptedFiles.map(file => Object.assign(file, {\n        preview: URL.createObjectURL(file)\n      })));\n    }\n  });\n  const thumbs = files.map(file => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: thumbInner,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: file.preview,\n        style: img\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, file.name, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this));\n  useEffect(() => () => {\n    // Make sure to revoke the data uris to avoid memory leaks\n    files.forEach(file => URL.revokeObjectURL(file.preview));\n  }, [files]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", { ...getRootProps({\n        className: 'dropzone drop-area'\n      }),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Drag 'n' drop some files here, or click to select files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n      style: thumbsContainer,\n      children: thumbs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DragDrop, \"HtUHmGo3hwDZKSmIKg3riAANKQ4=\", false, function () {\n  return [useDropzone];\n});\n\n_c = DragDrop;\nexport default DragDrop;\n\nvar _c;\n\n$RefreshReg$(_c, \"DragDrop\");","map":{"version":3,"sources":["/Users/jaredricardo/Desktop/apps/pixel-sorter/src/components/DragDrop.js"],"names":["React","useEffect","useState","useDropzone","img","display","width","height","DragDrop","props","files","setFiles","getRootProps","getInputProps","accept","onDrop","acceptedFiles","map","file","Object","assign","preview","URL","createObjectURL","thumbs","thumbInner","name","forEach","revokeObjectURL","className","thumbsContainer"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,WAAR,QAA0B,gBAA1B;AAIA,MAAMC,GAAG,GAAG;AACVC,EAAAA,OAAO,EAAE,OADC;AAEVC,EAAAA,KAAK,EAAE,MAFG;AAGVC,EAAAA,MAAM,EAAE;AAHE,CAAZ;;AAOA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACvB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAACU,IAAAA,YAAD;AAAeC,IAAAA;AAAf,MAAgCV,WAAW,CAAC;AAChDW,IAAAA,MAAM,EAAE,SADwC;AAEhDC,IAAAA,MAAM,EAAEC,aAAa,IAAI;AACvBL,MAAAA,QAAQ,CAACK,aAAa,CAACC,GAAd,CAAkBC,IAAI,IAAIC,MAAM,CAACC,MAAP,CAAcF,IAAd,EAAoB;AACrDG,QAAAA,OAAO,EAAEC,GAAG,CAACC,eAAJ,CAAoBL,IAApB;AAD4C,OAApB,CAA1B,CAAD,CAAR;AAGD;AAN+C,GAAD,CAAjD;AASA,QAAMM,MAAM,GAAGd,KAAK,CAACO,GAAN,CAAUC,IAAI,iBAC3B;AAAA,2BACE;AAAK,MAAA,KAAK,EAAEO,UAAZ;AAAA,6BACE;AACE,QAAA,GAAG,EAAEP,IAAI,CAACG,OADZ;AAEE,QAAA,KAAK,EAAEjB;AAFT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,KAAUc,IAAI,CAACQ,IAAf;AAAA;AAAA;AAAA;AAAA,UADa,CAAf;AAWAzB,EAAAA,SAAS,CAAC,MAAM,MAAM;AACpB;AACAS,IAAAA,KAAK,CAACiB,OAAN,CAAcT,IAAI,IAAII,GAAG,CAACM,eAAJ,CAAoBV,IAAI,CAACG,OAAzB,CAAtB;AACD,GAHQ,EAGN,CAACX,KAAD,CAHM,CAAT;AAKA,sBACE;AAAS,IAAA,SAAS,EAAC,WAAnB;AAAA,4BACE,oBAASE,YAAY,CAAC;AAACiB,QAAAA,SAAS,EAAE;AAAZ,OAAD,CAArB;AAAA,8BACE,sBAAWhB,aAAa;AAAxB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAO,MAAA,KAAK,EAAEiB,eAAd;AAAA,gBACGN;AADH;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GAtCQhB,Q;UAE+BL,W;;;KAF/BK,Q;AAwCT,eAAeA,QAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {useDropzone} from 'react-dropzone';\n\n\n\nconst img = {\n  display: 'block',\n  width: 'auto',\n  height: '100%'\n};\n\n\nfunction DragDrop(props) {\n  const [files, setFiles] = useState([]);\n  const {getRootProps, getInputProps} = useDropzone({\n    accept: 'image/*',\n    onDrop: acceptedFiles => {\n      setFiles(acceptedFiles.map(file => Object.assign(file, {\n        preview: URL.createObjectURL(file)\n      })));\n    }\n  });\n  \n  const thumbs = files.map(file => (\n    <div key={file.name}>\n      <div style={thumbInner}>\n        <img\n          src={file.preview}\n          style={img}\n        />\n      </div>\n    </div>\n  ));\n\n  useEffect(() => () => {\n    // Make sure to revoke the data uris to avoid memory leaks\n    files.forEach(file => URL.revokeObjectURL(file.preview));\n  }, [files]);\n\n  return (\n    <section className=\"container\">\n      <div {...getRootProps({className: 'dropzone drop-area'})}>\n        <input {...getInputProps()} />\n        <p>Drag 'n' drop some files here, or click to select files</p>\n      </div>\n      <aside style={thumbsContainer}>\n        {thumbs}\n      </aside>\n    </section>\n  );\n}\n\nexport default DragDrop"]},"metadata":{},"sourceType":"module"}